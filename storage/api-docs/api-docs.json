{
    "openapi": "3.0.0",
    "info": {
        "title": "ABA App API",
        "version": "2.0"
    },
    "paths": {
        "/api/v2/bips": {
            "get": {
                "tags": [
                    "BIPs"
                ],
                "summary": "List all BIPs",
                "description": "Retrieve a paginated list of behavior intervention plans (BIPs) with optional filters and their subplans.",
                "operationId": "a3c6a76edc377107281ee77209fe443a",
                "parameters": [
                    {
                        "name": "patient_identifier",
                        "in": "query",
                        "description": "Filter BIPs by patient identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Bip"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Create a new BIP",
                "operationId": "745934bd241537d5a510d1180a25867c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bip"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "BIP created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BIP created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/bips/{id}": {
            "get": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Get BIP by ID",
                "operationId": "1b7d71ea378b74665f775f39ea52708e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BIP ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Update a BIP",
                "operationId": "39f9d961db9b97f3c6e5af365fb06f70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BIP ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bip"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "BIP updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BIP updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Delete a BIP",
                "operationId": "b120c040ee4b8bc5d54365a7e4ec74f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BIP deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BIP deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BIP not found"
                    }
                }
            }
        },
        "/api/v2/consent-to-treatments": {
            "get": {
                "tags": [
                    "Admin/Consent To Treatments"
                ],
                "summary": "Get paginated consent to treatments",
                "description": "Retrieves a paginated list of consent to treatments with optional filters",
                "operationId": "8cc1a33af0713f440016daf615c5d267",
                "parameters": [
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedConsentToTreatmentResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Consent To Treatments"
                ],
                "summary": "Create a new consent to treatment",
                "description": "Creates a new consent to treatment with the provided data",
                "operationId": "ae1ef6f7eeb4c4c8cac4629be69a4613",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bip_id"
                                ],
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "analyst_signature": {
                                        "type": "string"
                                    },
                                    "analyst_signature_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "parent_guardian_signature": {
                                        "type": "string"
                                    },
                                    "parent_guardian_signature_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Consent to treatment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Consent to treatment created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ConsentToTreatment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/consent-to-treatments/{id}": {
            "get": {
                "tags": [
                    "Admin/Consent To Treatments"
                ],
                "summary": "Get a single consent to treatment",
                "description": "Retrieves a specific consent to treatment by its ID",
                "operationId": "0e22b5d97e76cbbf864a91844ce391f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consent to treatment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ConsentToTreatment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Consent to treatment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Consent To Treatments"
                ],
                "summary": "Update a consent to treatment",
                "description": "Updates an existing consent to treatment",
                "operationId": "b1f97aaf5f48de24dcad10312d6bbd12",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consent to treatment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "analyst_signature": {
                                        "type": "string"
                                    },
                                    "analyst_signature_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "parent_guardian_signature": {
                                        "type": "string"
                                    },
                                    "parent_guardian_signature_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Consent to treatment updated successfully"
                    },
                    "404": {
                        "description": "Consent to treatment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Consent To Treatments"
                ],
                "summary": "Delete a consent to treatment",
                "description": "Deletes an existing consent to treatment",
                "operationId": "0b1dab587b5f256a68527c7d186f9106",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the consent to treatment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Consent to treatment deleted successfully"
                    },
                    "404": {
                        "description": "Consent to treatment not found"
                    }
                }
            }
        },
        "/api/v2/crisis-plans": {
            "get": {
                "tags": [
                    "Admin/Crisis Plans"
                ],
                "summary": "Get paginated crisis plans",
                "description": "Retrieves a paginated list of crisis plans with optional filters",
                "operationId": "eb6f452a5214e528d631e0e1c977f94c",
                "parameters": [
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedCrisisPlanResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Crisis Plans"
                ],
                "summary": "Create a new crisis plan",
                "description": "Creates a new crisis plan with the provided data",
                "operationId": "9701d5f6a54a4d4bbf9fbb138bf1df94",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_identifier"
                                ],
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "patient_identifier": {
                                        "type": "string"
                                    },
                                    "crisis_description": {
                                        "type": "string"
                                    },
                                    "crisis_note": {
                                        "type": "string"
                                    },
                                    "caregiver_requirements_for_prevention_of_crisis": {
                                        "type": "string"
                                    },
                                    "risk_factors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "suicidalities": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "homicidalities": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Crisis plan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Crisis plan created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CrisisPlan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/crisis-plans/{id}": {
            "get": {
                "tags": [
                    "Admin/Crisis Plans"
                ],
                "summary": "Get a single crisis plan",
                "description": "Retrieves a specific crisis plan by its ID",
                "operationId": "f6239cc7fbcd33c900a1438cb020b68e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the crisis plan",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CrisisPlan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Crisis plan not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Crisis Plans"
                ],
                "summary": "Update a crisis plan",
                "description": "Updates an existing crisis plan",
                "operationId": "8c0cf2ce482c1d04e92ddf5a6890dae2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the crisis plan",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "patient_identifier": {
                                        "type": "string"
                                    },
                                    "crisis_description": {
                                        "type": "string"
                                    },
                                    "crisis_note": {
                                        "type": "string"
                                    },
                                    "caregiver_requirements_for_prevention_of_crisis": {
                                        "type": "string"
                                    },
                                    "risk_factors": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "suicidalities": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "homicidalities": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Crisis plan updated successfully"
                    },
                    "404": {
                        "description": "Crisis plan not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Crisis Plans"
                ],
                "summary": "Delete a crisis plan",
                "description": "Deletes an existing crisis plan",
                "operationId": "7e6ab4dc8c7be39ee2370b88c4cb7aac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the crisis plan",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Crisis plan deleted successfully"
                    },
                    "404": {
                        "description": "Crisis plan not found"
                    }
                }
            }
        },
        "/api/v2/de-escalation-techniques": {
            "get": {
                "tags": [
                    "Admin/De-escalation Techniques"
                ],
                "summary": "Get paginated de-escalation techniques",
                "description": "Retrieves a paginated list of de-escalation techniques with optional filters",
                "operationId": "01ede1a8fb50b2dcde42a031133a826a",
                "parameters": [
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedDeEscalationTechniqueResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/De-escalation Techniques"
                ],
                "summary": "Create a new de-escalation technique",
                "description": "Creates a new de-escalation technique with the provided data",
                "operationId": "a17094c6d0cb1c41da9fee41304aad77",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bip_id"
                                ],
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "service_recomendation": {
                                        "type": "string"
                                    },
                                    "recomendation_lists": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "cpt": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "num_units": {
                                                    "type": "integer"
                                                },
                                                "breakdown_per_week": {
                                                    "type": "string"
                                                },
                                                "description_service": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "De-escalation technique created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "De-escalation technique created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeEscalationTechnique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/de-escalation-techniques/{id}": {
            "get": {
                "tags": [
                    "Admin/De-escalation Techniques"
                ],
                "summary": "Get a single de-escalation technique",
                "description": "Retrieves a specific de-escalation technique by its ID",
                "operationId": "ba121f87211bf0d07ac5b7b0a6d49ccb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the de-escalation technique",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DeEscalationTechnique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "De-escalation technique not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/De-escalation Techniques"
                ],
                "summary": "Update a de-escalation technique",
                "description": "Updates an existing de-escalation technique",
                "operationId": "8826adf3be5feb7312a7db82b9100d92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the de-escalation technique",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "service_recomendation": {
                                        "type": "string"
                                    },
                                    "recomendation_lists": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "cpt": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "num_units": {
                                                    "type": "integer"
                                                },
                                                "breakdown_per_week": {
                                                    "type": "string"
                                                },
                                                "description_service": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "De-escalation technique updated successfully"
                    },
                    "404": {
                        "description": "De-escalation technique not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/De-escalation Techniques"
                ],
                "summary": "Delete a de-escalation technique",
                "description": "Deletes an existing de-escalation technique",
                "operationId": "815f7cbb1ed6e75d52ca855cfd18386c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the de-escalation technique",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "De-escalation technique deleted successfully"
                    },
                    "404": {
                        "description": "De-escalation technique not found"
                    }
                }
            }
        },
        "/api/v2/generalization-trainings": {
            "get": {
                "tags": [
                    "Admin/Generalization Trainings"
                ],
                "summary": "Get paginated generalization trainings",
                "description": "Retrieves a paginated list of generalization trainings with optional filters",
                "operationId": "cd5d8cee82378d3cd696d8f0a6363ef8",
                "parameters": [
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedGeneralizationTrainingResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Generalization Trainings"
                ],
                "summary": "Create a new generalization training",
                "description": "Creates a new generalization training with the provided data",
                "operationId": "5a0e35123c27d7be6b1f00dad8d411d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bip_id"
                                ],
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "discharge_plan": {
                                        "type": "string"
                                    },
                                    "transition_fading_plans": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "transition_plan": {
                                                    "type": "string"
                                                },
                                                "fading_plan": {
                                                    "type": "string"
                                                },
                                                "timeline": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Generalization training created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Generalization training created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GeneralizationTraining"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/generalization-trainings/{id}": {
            "get": {
                "tags": [
                    "Admin/Generalization Trainings"
                ],
                "summary": "Get a single generalization training",
                "description": "Retrieves a specific generalization training by its ID",
                "operationId": "9e7b8d445cb664293d9d733535fb01a6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the generalization training",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/GeneralizationTraining"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Generalization training not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Generalization Trainings"
                ],
                "summary": "Update a generalization training",
                "description": "Updates an existing generalization training",
                "operationId": "a6e93b2d290cf95a9e964685eaa6272a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the generalization training",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "discharge_plan": {
                                        "type": "string"
                                    },
                                    "transition_fading_plans": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "transition_plan": {
                                                    "type": "string"
                                                },
                                                "fading_plan": {
                                                    "type": "string"
                                                },
                                                "timeline": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Generalization training updated successfully"
                    },
                    "404": {
                        "description": "Generalization training not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Generalization Trainings"
                ],
                "summary": "Delete a generalization training",
                "description": "Deletes an existing generalization training",
                "operationId": "90cb3e8e6c33d580279e21ebcd4e2de6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the generalization training",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generalization training deleted successfully"
                    },
                    "404": {
                        "description": "Generalization training not found"
                    }
                }
            }
        },
        "/api/v2/objectives": {
            "get": {
                "tags": [
                    "Objectives"
                ],
                "summary": "List all Objectives",
                "description": "Retrieve a paginated list of objectives with optional filters",
                "operationId": "c0947a9f85d6c79d0b4b5c7120282246",
                "parameters": [
                    {
                        "name": "plan_id",
                        "in": "query",
                        "description": "Filter objectives by Plan ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter objectives by type (STO or LTO)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "STO",
                                "LTO"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter objectives by their current status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "in progress",
                                "mastered",
                                "not started",
                                "discontinued",
                                "maintenance"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Objective"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/objectives?page=1"
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/objectives?page=3"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/objectives?page=2"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/objectives"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 40
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Create a new Objective",
                "description": "Create a new objective. Note: Only one LTO is allowed per plan, and LTOs must have order=999.",
                "operationId": "3b2cba26336ef8f05a2b0f9da362453a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "plan_id",
                                    "type",
                                    "description",
                                    "target",
                                    "initial_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type": {
                                        "description": "LTO = Long Term Objective (only one per plan, order=999), STO = Short Term Objective",
                                        "type": "string",
                                        "enum": [
                                            "STO",
                                            "LTO"
                                        ],
                                        "example": "STO"
                                    },
                                    "status": {
                                        "description": "Initial status of the objective",
                                        "type": "string",
                                        "enum": [
                                            "in progress",
                                            "mastered",
                                            "not started",
                                            "discontinued",
                                            "maintenance"
                                        ],
                                        "example": "not started"
                                    },
                                    "initial_date": {
                                        "description": "Start date. Must be before end_date.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "end_date": {
                                        "description": "End date. Must be after initial_date.",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Reduce inappropriate behavior to less than 5 instances per day"
                                    },
                                    "start_point": {
                                        "description": "Starting point of the objective. For maladaptive plans: initial value, for replacement plans: 0, for training plans: 0.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10,
                                        "nullable": true
                                    },
                                    "target": {
                                        "description": "For maladaptive plans: 0-100 (reduction). For replacement plans: >= 0 (improvement).",
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    },
                                    "order": {
                                        "description": "Optional for STOs (will be placed at end if not provided). For LTOs, always set to 999.",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Objective created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objective created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Objective"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "type": [
                                                    "The type field is required."
                                                ],
                                                "target": [
                                                    "Target for maladaptive plans must be between 0 and 100"
                                                ],
                                                "multiple_lto": [
                                                    "Plan already has a long term objective"
                                                ]
                                            },
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/objectives/{id}": {
            "get": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Get Objective by ID",
                "description": "Retrieve a single objective with its associated plan",
                "operationId": "f076f078ad9ee3558666f213cbfd3939",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Objective ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Objective"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Objective not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objective not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Update an Objective",
                "description": "Update an existing objective. Note: LTO order cannot be changed from 999.",
                "operationId": "db9fcd766c8067f66dcc46569a934cdf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Objective ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "in progress",
                                            "mastered",
                                            "not started",
                                            "discontinued",
                                            "maintenance"
                                        ]
                                    },
                                    "initial_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "target": {
                                        "description": "For maladaptive plans: 0-100 (reduction). For replacement plans: >= 0 (improvement).",
                                        "type": "number"
                                    },
                                    "order": {
                                        "description": "Only for STOs. Existing objectives will be reordered.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Objective updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objective updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Objective"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Objective not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Delete an Objective",
                "description": "Delete an objective and reorder remaining objectives if necessary",
                "operationId": "9297ca5496560558152a2a69ec13c4cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Objective ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objective deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objective deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Objective not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objective not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error deleting objective"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/objectives/reorder": {
            "post": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Reorder objectives",
                "operationId": "11dea52673775fcc941091a1fd982787",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "objectives"
                                ],
                                "properties": {
                                    "objectives": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "order"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "order": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Objectives reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objectives reordered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/plans": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "List all Plans",
                "description": "Retrieve a paginated list of plans with optional filters",
                "operationId": "ccb7cb45138a7c03cbbc56bde776bc39",
                "parameters": [
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter plans by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter plans by name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter plans by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "maladaptive",
                                "replacement",
                                "caregiver_training",
                                "rbt_training"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter plans by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "completed",
                                "hold",
                                "discontinued",
                                "maintenance",
                                "met",
                                "monitoring"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Plan"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/plans?page=1"
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/plans?page=3"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/plans?page=2"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://localhost/api/v2/plans"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 40
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Plans"
                ],
                "summary": "Create a new Plan",
                "description": "Create a new plan with optional objectives. For maladaptive and replacement plans, baseline fields are required.",
                "operationId": "e881f9d8dfdba8bf0374693c95475083",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bip_id",
                                    "name",
                                    "description",
                                    "category",
                                    "status"
                                ],
                                "properties": {
                                    "bip_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Aggressive Behavior"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Displays aggressive behavior towards others"
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "maladaptive",
                                            "replacement",
                                            "caregiver_training",
                                            "rbt_training"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "hold",
                                            "discontinued",
                                            "maintenance",
                                            "met",
                                            "monitoring"
                                        ]
                                    },
                                    "baseline_level": {
                                        "description": "Required for maladaptive/replacement",
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "baseline_date": {
                                        "description": "Required for maladaptive/replacement",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-01"
                                    },
                                    "initial_intensity": {
                                        "description": "Required for maladaptive/replacement",
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "current_intensity": {
                                        "description": "Required for maladaptive/replacement",
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "objectives": {
                                        "description": "Optional objectives to create with the plan",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "type",
                                                "description",
                                                "target",
                                                "initial_date",
                                                "end_date"
                                            ],
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "LTO",
                                                        "STO"
                                                    ]
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "target": {
                                                    "type": "integer"
                                                },
                                                "initial_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "order": {
                                                    "description": "Optional. For LTOs, will be set to 999",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Plan created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Plan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "field": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/plans/{id}": {
            "get": {
                "tags": [
                    "Plans"
                ],
                "summary": "Get Plan by ID",
                "description": "Retrieve a single plan with its objectives",
                "operationId": "e081a38f8afdb4bf9737103a407510c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Plan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Plans"
                ],
                "summary": "Update a Plan",
                "description": "Update an existing plan. Only provided fields will be updated.",
                "operationId": "2ac79a50604c1dac07591764e8b736d3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": [
                                            "maladaptive",
                                            "replacement",
                                            "caregiver_training",
                                            "rbt_training"
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "hold",
                                            "discontinued",
                                            "maintenance",
                                            "met",
                                            "monitoring"
                                        ]
                                    },
                                    "baseline_level": {
                                        "type": "integer"
                                    },
                                    "baseline_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "initial_intensity": {
                                        "type": "integer"
                                    },
                                    "current_intensity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plan updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Plan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Plans"
                ],
                "summary": "Delete a Plan",
                "description": "Delete a plan and all its associated objectives",
                "operationId": "e99ca25d31e5155590d6eacbb2dd55d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plan deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan and related objectives deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Plan not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error deleting plan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/insurance": {
            "get": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Get paginated insurance list",
                "description": "Retrieves a paginated list of insurance with optional filters",
                "operationId": "2fc52d5babe24cad601e5b95bb867bf4",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedInsuranceResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Create a new insurance",
                "description": "Creates a new insurance record",
                "operationId": "115dd62f9d8140618ed8798e779d8e71",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "services": {
                                        "type": "object"
                                    },
                                    "notes": {
                                        "type": "object"
                                    },
                                    "payer_id": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "street2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "is_self_subscriber": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Insurance created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Insurance created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Insurance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/insurance/{id}": {
            "get": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Get a single insurance",
                "description": "Retrieves a specific insurance by its ID",
                "operationId": "ba976c601f2050971e7022da72ae1662",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Insurance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Insurance not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Update an insurance",
                "description": "Updates an existing insurance record",
                "operationId": "2d01fd93f1a87b86e8021fdff009d336",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "services": {
                                        "type": "object"
                                    },
                                    "notes": {
                                        "type": "object"
                                    },
                                    "payer_id": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "street2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Insurance updated successfully"
                    },
                    "404": {
                        "description": "Insurance not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Delete an insurance",
                "description": "Deletes an existing insurance record",
                "operationId": "f38d0bf45649ddcbdf987244e9ddd1a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Insurance deleted successfully"
                    },
                    "404": {
                        "description": "Insurance not found"
                    }
                }
            }
        },
        "/api/v2/locations": {
            "get": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Get paginated locations list",
                "description": "Retrieves a paginated list of locations with optional filters",
                "operationId": "029b3b170bf762dd510de162b3c448fe",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by location title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "Filter by zip code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedLocationResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Create a new location",
                "description": "Creates a new location record",
                "operationId": "25ffe663afdb0680da2be674880f31f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "city",
                                    "state"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "phone1": {
                                        "type": "string"
                                    },
                                    "phone2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "telfax": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully"
                    }
                }
            }
        },
        "/api/v2/locations/{id}": {
            "get": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Get a single location",
                "description": "Retrieves a specific location by its ID",
                "operationId": "e083830718ae2c88846286f3e5e076dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Update a location",
                "description": "Updates an existing location record",
                "operationId": "014e080f772ff357e8d1125da701324b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "phone1": {
                                        "type": "string"
                                    },
                                    "phone2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "telfax": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Delete a location",
                "description": "Deletes an existing location record",
                "operationId": "5cf99e3577a14bb9abe3657f6644a4cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            }
        },
        "/api/v2/notes/bcba": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get paginated BCBA notes",
                "description": "Retrieves a paginated list of BCBA notes with optional filters",
                "operationId": "77cb7895f09db2d25e17e95a758f14a8",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter by patient ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "patient_identifier",
                        "in": "query",
                        "description": "Filter by patient identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedNoteBcbaResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Create a new BCBA note",
                "description": "Creates a new BCBA note with the provided data",
                "operationId": "682c11713646fdadc80b56e53a12b2e2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "session_date"
                                ],
                                "properties": {
                                    "insurance_id": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "patient_identifier": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "diagnosis_code": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "note_description": {
                                        "type": "string"
                                    },
                                    "session_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "participants": {
                                        "type": "string"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "session_length_total": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "supervisor_id": {
                                        "type": "integer"
                                    },
                                    "caregiver_goals": {
                                        "type": "object"
                                    },
                                    "rbt_training_goals": {
                                        "type": "object"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    },
                                    "insurance_identifier": {
                                        "type": "string"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "BCBA_conducted_client_observations": {
                                        "type": "boolean"
                                    },
                                    "BCBA_conducted_assessments": {
                                        "type": "boolean"
                                    },
                                    "interventionProtocols": {
                                        "type": "object"
                                    },
                                    "behaviorProtocols": {
                                        "type": "object"
                                    },
                                    "intake_outcome": {
                                        "type": "object"
                                    },
                                    "assessment_tools": {
                                        "type": "object"
                                    },
                                    "replacementProtocols": {
                                        "type": "object"
                                    },
                                    "modifications_needed_at_this_time": {
                                        "type": "boolean"
                                    },
                                    "additional_goals_or_interventions": {
                                        "type": "string"
                                    },
                                    "cargiver_participation": {
                                        "type": "boolean"
                                    },
                                    "was_the_client_present": {
                                        "type": "boolean"
                                    },
                                    "asked_and_clarified_questions_about_the_implementation_of": {
                                        "type": "string"
                                    },
                                    "reinforced_caregiver_strengths_in": {
                                        "type": "string"
                                    },
                                    "gave_constructive_feedback_on": {
                                        "type": "string"
                                    },
                                    "recomended_more_practice_on": {
                                        "type": "string"
                                    },
                                    "subtype": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteBcba"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/notes/bcba/{id}": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get a single BCBA note",
                "description": "Retrieves a specific BCBA note by its ID",
                "operationId": "437afcd44b119a8e18f0d0ef327cec3a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteBcba"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Update a BCBA note",
                "description": "Updates an existing BCBA note",
                "operationId": "ebd7a029fb12ef32e6f207b201ed9507",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "insurance_id": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "patient_identifier": {
                                        "type": "string"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "diagnosis_code": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "note_description": {
                                        "type": "string"
                                    },
                                    "session_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "participants": {
                                        "type": "string"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "session_length_total": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "session_length_total2": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "supervisor_id": {
                                        "type": "integer"
                                    },
                                    "caregiver_goals": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "rbt_training_goals": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    },
                                    "insurance_identifier": {
                                        "type": "string"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "BCBA_conducted_client_observations": {
                                        "type": "boolean"
                                    },
                                    "BCBA_conducted_assessments": {
                                        "type": "boolean"
                                    },
                                    "subtype": {
                                        "type": "string"
                                    },
                                    "intake_outcome": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "assessment_tools": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "intervention_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "replacement_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "modifications_needed_at_this_time": {
                                        "type": "boolean"
                                    },
                                    "additional_goals_or_interventions": {
                                        "type": "string"
                                    },
                                    "cargiver_participation": {
                                        "type": "boolean"
                                    },
                                    "was_the_client_present": {
                                        "type": "boolean"
                                    },
                                    "asked_and_clarified_questions_about_the_implementation_of": {
                                        "type": "string"
                                    },
                                    "reinforced_caregiver_strengths_in": {
                                        "type": "string"
                                    },
                                    "gave_constructive_feedback_on": {
                                        "type": "string"
                                    },
                                    "recomended_more_practice_on": {
                                        "type": "string"
                                    },
                                    "demonstrated_intervention_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "demonstrated_replacement_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "behavior_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "md": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "md2": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "md3": {
                                        "type": "string",
                                        "maxLength": 20
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Delete a BCBA note",
                "description": "Deletes an existing BCBA note",
                "operationId": "b198c3b35398b16856b545583c7dbc59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Partially update a BCBA note",
                "description": "Updates specific fields of an existing BCBA note",
                "operationId": "3055e8303049bca0979a90a9bf9b68ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "insurance_id": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "patient_identifier": {
                                        "type": "string"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "diagnosis_code": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "note_description": {
                                        "type": "string"
                                    },
                                    "session_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "participants": {
                                        "type": "string"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "session_length_total": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "session_length_total2": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "supervisor_id": {
                                        "type": "integer"
                                    },
                                    "caregiver_goals": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "rbt_training_goals": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    },
                                    "insurance_identifier": {
                                        "type": "string"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "BCBA_conducted_client_observations": {
                                        "type": "boolean"
                                    },
                                    "BCBA_conducted_assessments": {
                                        "type": "boolean"
                                    },
                                    "subtype": {
                                        "type": "string"
                                    },
                                    "intake_outcome": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "assessment_tools": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "intervention_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "replacement_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "modifications_needed_at_this_time": {
                                        "type": "boolean"
                                    },
                                    "additional_goals_or_interventions": {
                                        "type": "string"
                                    },
                                    "cargiver_participation": {
                                        "type": "boolean"
                                    },
                                    "was_the_client_present": {
                                        "type": "boolean"
                                    },
                                    "asked_and_clarified_questions_about_the_implementation_of": {
                                        "type": "string"
                                    },
                                    "reinforced_caregiver_strengths_in": {
                                        "type": "string"
                                    },
                                    "gave_constructive_feedback_on": {
                                        "type": "string"
                                    },
                                    "recomended_more_practice_on": {
                                        "type": "string"
                                    },
                                    "demonstrated_intervention_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "demonstrated_replacement_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "behavior_protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "md": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "md2": {
                                        "type": "string",
                                        "maxLength": 20
                                    },
                                    "md3": {
                                        "type": "string",
                                        "maxLength": 20
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteBcba"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/notes/rbt": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get paginated RBT notes",
                "description": "Retrieves a paginated list of RBT notes with optional filters",
                "operationId": "0e451d24e5a9659f9a5e2e506f2ce081",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter by patient ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "patient_identifier",
                        "in": "query",
                        "description": "Filter by patient identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "doctor_id",
                        "in": "query",
                        "description": "Filter by doctor ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "description": "Filter by provider ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedNoteRbtResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Create a new RBT note",
                "description": "Creates a new RBT note with the provided data",
                "operationId": "379713f09a8a3fc9e7d0918007f00f44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_date",
                                    "patient_id",
                                    "doctor_id"
                                ],
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-01"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "participants": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00:00"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00:00"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "object"
                                    },
                                    "replacements": {
                                        "type": "object"
                                    },
                                    "interventions": {
                                        "type": "object"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "client_appeared": {
                                        "type": "string"
                                    },
                                    "as_evidenced_by": {
                                        "type": "string"
                                    },
                                    "rbt_modeled_and_demonstrated_to_caregiver": {
                                        "type": "string"
                                    },
                                    "client_response_to_treatment_this_session": {
                                        "type": "string"
                                    },
                                    "progress_noted_this_session_compared_to_previous_session": {
                                        "type": "string"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_credential": {
                                        "type": "string"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "supervisor_name": {
                                        "type": "integer"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/notes/rbt/{id}": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get a single RBT note",
                "description": "Retrieves a specific RBT note by its ID",
                "operationId": "66d698c39561942aabd064f22901060d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Update an RBT note",
                "description": "Updates an existing RBT note",
                "operationId": "c5595abc6308b393aab21756895d32e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_date",
                                    "patient_id",
                                    "doctor_id"
                                ],
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-01T00:00:00Z"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "participants": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "object"
                                    },
                                    "replacements": {
                                        "type": "object"
                                    },
                                    "interventions": {
                                        "type": "object"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "client_appeared": {
                                        "type": "string"
                                    },
                                    "as_evidenced_by": {
                                        "type": "string"
                                    },
                                    "rbt_modeled_and_demonstrated_to_caregiver": {
                                        "type": "string"
                                    },
                                    "client_response_to_treatment_this_session": {
                                        "type": "string"
                                    },
                                    "progress_noted_this_session_compared_to_previous_session": {
                                        "type": "string"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_credential": {
                                        "type": "string"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "supervisor_name": {
                                        "type": "integer"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Delete an RBT note",
                "description": "Deletes an existing RBT note",
                "operationId": "8525e4ad5e17a08fd822746c39a47349",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Partially update an RBT note",
                "description": "Updates specific fields of an existing RBT note",
                "operationId": "a3bb68e69cee5d0dd60d0b1f526c4495",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-01T00:00:00Z"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "participants": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "object"
                                    },
                                    "replacements": {
                                        "type": "object"
                                    },
                                    "interventions": {
                                        "type": "object"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "client_appeared": {
                                        "type": "string"
                                    },
                                    "as_evidenced_by": {
                                        "type": "string"
                                    },
                                    "rbt_modeled_and_demonstrated_to_caregiver": {
                                        "type": "string"
                                    },
                                    "client_response_to_treatment_this_session": {
                                        "type": "string"
                                    },
                                    "progress_noted_this_session_compared_to_previous_session": {
                                        "type": "string"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_credential": {
                                        "type": "string"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "supervisor_name": {
                                        "type": "integer"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patients/{patient_id}/pa-services": {
            "get": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Get all PA services for a patient",
                "operationId": "dca1262bb8f49350e75acfa515056707",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PA services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pa_services": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PaService"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Create a new PA service",
                "operationId": "83268284fcc6eaa09dd3947211de6ab8",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pa_service",
                                    "cpt",
                                    "n_units",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PA service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PA service created successfully"
                                        },
                                        "pa_service": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/patients/{patient_id}/pa-services/{id}": {
            "get": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Get a specific PA service",
                "operationId": "de7e896529d5c12cff225030487dc207",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the PA service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pa_service": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient or PA service not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Update a PA service",
                "operationId": "da06ce8f6d58d595dbbfdd5b4210508a",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the PA service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PA service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PA service updated successfully"
                                        },
                                        "pa_service": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient or PA service not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Delete a PA service",
                "operationId": "9d89d7a343dc2027366f53c22e3f6150",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the PA service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PA service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient or PA service not found"
                    }
                }
            }
        },
        "/api/v2/pa-services": {
            "get": {
                "tags": [
                    "PA Services"
                ],
                "summary": "List all PA services",
                "description": "Retrieve a paginated list of PA services with optional filters",
                "operationId": "f9a3b8922004579d32fe758d70056180",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter PA services by patient ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedPaServiceResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Create a new PA service",
                "operationId": "d6e993aec76f70cbd141b9f5bfc45734",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "pa_service",
                                    "cpt",
                                    "n_units",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PA service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PA service created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/pa-services/{id}": {
            "get": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Get PA service by ID",
                "operationId": "74cb4b7a643eeee749c88af6d7bb15e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PA service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Update a PA service",
                "operationId": "0bc1777e63f22068a22d71035136ad1e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PA service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pa_service": {
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "type": "string"
                                    },
                                    "n_units": {
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PA service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PA service updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Delete a PA service",
                "operationId": "a93f34e16a436fc477a98f75670374ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "PA service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/patients/{patient_id}/pa-services": {
            "get": {
                "tags": [
                    "Old/PA Services"
                ],
                "summary": "Get paginated PA services list for a patient",
                "operationId": "064d7c1800562f3ba250e24853c2e806",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedPaServiceResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Old/PA Services"
                ],
                "summary": "Create a new PA service",
                "operationId": "c0289d7a737f78bb0a3459a5ae49dcf9",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pa_service",
                                    "cpt",
                                    "n_units",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PA service created successfully"
                    }
                }
            }
        },
        "/api/v2/patients/{patient_id}/pa-services/{id}": {
            "get": {
                "tags": [
                    "Old/PA Services"
                ],
                "summary": "Get a single PA service",
                "operationId": "1eb81b2f2f35062c13d0377fe6371c22",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Old/PA Services"
                ],
                "summary": "Delete a PA service",
                "operationId": "aaf8b3c36db2d8ff099381efa1211965",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service deleted successfully"
                    }
                }
            }
        },
        "/api/v2/patients/{patient_identfifier}/pa-services/{id}": {
            "put": {
                "tags": [
                    "Old/PA Services"
                ],
                "summary": "Update a PA service",
                "operationId": "4105ac9b56826272da6189c97ab48348",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pa_service": {
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "type": "string"
                                    },
                                    "n_units": {
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PA service updated successfully"
                    }
                }
            }
        },
        "/api/v2/roles": {
            "get": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Get paginated roles",
                "description": "Retrieves a paginated list of roles with optional search filter",
                "operationId": "7ef8da7123353e3edf3003e17501b646",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search roles by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Create a new role",
                "description": "Creates a new role with the specified permissions",
                "operationId": "ddc26a6207c9461868dd202674052528",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "RBT"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "view_users"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v2/roles/{id}": {
            "get": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Get a single role",
                "description": "Retrieves a specific role by its ID",
                "operationId": "0715cbf1198362be2a9b4cdc6b64ad2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Update a role",
                "description": "Updates an existing role",
                "operationId": "db0bf0c88b2faa0ea634ceafd6b9a1cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "RBT"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "view_users"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Delete a role",
                "description": "Deletes an existing role if it has no associated users",
                "operationId": "45caa799970d9a8b37b150c9aef5aca8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Role cannot be deleted due to associated users"
                    }
                }
            }
        },
        "/api/v2/weekly-reports": {
            "get": {
                "tags": [
                    "WeeklyReports"
                ],
                "summary": "Get paginated weekly reports",
                "description": "Retrieves a paginated list of weekly reports with optional filters",
                "operationId": "0916d259b951e618ccd7dc1f2da39a5b",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: plan",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plan_id",
                        "in": "query",
                        "description": "Filter by plan ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedWeeklyReportResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "WeeklyReports"
                ],
                "summary": "Create a new weekly report",
                "description": "Creates a new weekly report with the provided data",
                "operationId": "406cfdbe3a4fa0705ddc29f065e2f75f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "plan_id",
                                    "week_start",
                                    "week_end",
                                    "value"
                                ],
                                "properties": {
                                    "plan_id": {
                                        "type": "integer"
                                    },
                                    "week_start": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "week_end": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "value": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weekly report created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WeeklyReport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v2/weekly-reports/{id}": {
            "get": {
                "tags": [
                    "WeeklyReports"
                ],
                "summary": "Get a single weekly report",
                "description": "Retrieves a specific weekly report by its ID",
                "operationId": "cc555432bca0f70f0386ed909581e4e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the weekly report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: plan",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WeeklyReport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "WeeklyReports"
                ],
                "summary": "Update a weekly report",
                "description": "Updates an existing weekly report",
                "operationId": "427be47be5ecc1d4386e82f29c462d17",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the weekly report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "plan_id",
                                    "week_start",
                                    "week_end",
                                    "value"
                                ],
                                "properties": {
                                    "plan_id": {
                                        "type": "integer"
                                    },
                                    "week_start": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "week_end": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "value": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weekly report updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WeeklyReport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "WeeklyReports"
                ],
                "summary": "Delete a weekly report",
                "description": "Deletes an existing weekly report",
                "operationId": "136e7a8c87ca553c39e8b79d7d6f45a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the weekly report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weekly report deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "WeeklyReports"
                ],
                "summary": "Partially update a weekly report",
                "description": "Updates specific fields of an existing weekly report",
                "operationId": "e52dadb3c1eed59e4da2c4d4a5bc2bad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the weekly report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plan_id": {
                                        "type": "integer"
                                    },
                                    "week_start": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "week_end": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "value": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weekly report updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WeeklyReport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Report not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v2/claims": {
            "get": {
                "tags": [
                    "Claims"
                ],
                "summary": "Get paginated claims list",
                "description": "Retrieves a paginated list of claims with optional filters",
                "operationId": "b61945fef6f70bd539f230f9afa932eb",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filename",
                        "in": "query",
                        "description": "Filter by filename",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter by start date (Y-m-d)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter by end date (Y-m-d)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "rbt_note_ids",
                        "in": "query",
                        "description": "Filter by RBT note IDs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "bcba_note_ids",
                        "in": "query",
                        "description": "Filter by BCBA note IDs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedClaimResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Claims"
                ],
                "summary": "Create a new claim",
                "operationId": "c520f5135ada58d85c382a1418eea10b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes_rbt_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "notes_bcba_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "file_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Claim created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Claim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/v2/claims/{id}": {
            "get": {
                "tags": [
                    "Claims"
                ],
                "summary": "Get a single claim",
                "operationId": "798077ee6b8d531f2191eb19dde881cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Claim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Claims"
                ],
                "summary": "Update a claim",
                "operationId": "6c572229a6aabd60e0c4e533d526f507",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes_rbt_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "notes_bcba_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "file_name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Claim updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Claim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Claims"
                ],
                "summary": "Delete a claim",
                "operationId": "dfad1c3361ce9467b4f408f51a02743e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            }
        },
        "/api/v2/claims/{id}/send-to-claim-md": {
            "post": {
                "tags": [
                    "Claims"
                ],
                "summary": "Send a claim to Claim MD",
                "operationId": "9dcadc784968b948aa62b4631a4da03f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            }
        },
        "/api/note_rbt/generate-summary": {
            "post": {
                "tags": [
                    "AI"
                ],
                "summary": "Generate RBT session summary",
                "operationId": "2ff9812b75aa85bb2a5ae57a9d707977",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "diagnosis",
                                    "maladaptives",
                                    "replacements",
                                    "interventions"
                                ],
                                "properties": {
                                    "diagnosis": {
                                        "description": "Patient's diagnosis",
                                        "type": "string"
                                    },
                                    "birthDate": {
                                        "description": "Patient's birth date",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "participants": {
                                        "description": "Participants",
                                        "type": "string"
                                    },
                                    "startTime": {
                                        "description": "Session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "description": "Session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "startTime2": {
                                        "description": "Second session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime2": {
                                        "description": "Second session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "mood": {
                                        "description": "Patient's mood during session",
                                        "type": "string"
                                    },
                                    "pos": {
                                        "description": "Place of service",
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "description": "CPT code",
                                        "type": "string"
                                    },
                                    "clientResponseToTreatmentThisSession": {
                                        "description": "Patient's response to treatment this session",
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "behavior": {
                                                    "type": "string"
                                                },
                                                "frequency": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "replacements": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "totalTrials": {
                                                    "type": "integer"
                                                },
                                                "correctResponses": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "interventions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "summary": {
                                            "description": "Generated summary text",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/note_bcba/generate-summary": {
            "post": {
                "tags": [
                    "AI"
                ],
                "summary": "Generate BCBA supervision summary",
                "operationId": "ccaaf40c473232b17700215ee48d8ae7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "diagnosis",
                                    "caregiverGoals",
                                    "rbtTrainingGoals",
                                    "noteDescription"
                                ],
                                "properties": {
                                    "diagnosis": {
                                        "description": "Patient's diagnosis",
                                        "type": "string"
                                    },
                                    "birthDate": {
                                        "description": "Patient's birth date",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "participants": {
                                        "description": "Participants",
                                        "type": "string"
                                    },
                                    "startTime": {
                                        "description": "Session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "description": "Session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "startTime2": {
                                        "description": "Second session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime2": {
                                        "description": "Second session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "pos": {
                                        "description": "Place of service",
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "description": "CPT code",
                                        "type": "string"
                                    },
                                    "caregiverGoals": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "goal": {
                                                    "type": "string"
                                                },
                                                "percentCorrect": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "rbtTrainingGoals": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "goal": {
                                                    "type": "string"
                                                },
                                                "percentCorrect": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "noteDescription": {
                                        "description": "Session description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "summary": {
                                            "description": "Generated summary text",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/patients": {
            "get": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Get paginated patients list",
                "description": "Retrieves a paginated list of patients with optional filters",
                "operationId": "11a3a3c89a6814a07c7929ceb80e3dce",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: insurance",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in first name, last name and email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter by patient ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Filter by gender",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "insurer_id",
                        "in": "query",
                        "description": "Filter by insurance provider",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedPatientResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Create a new patient",
                "description": "Creates a new patient record",
                "operationId": "b1f515c3ab420b10115baed071c58b5d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/patients/{id}": {
            "get": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Get a single patient",
                "description": "Retrieves a specific patient by their ID",
                "operationId": "63f934a42e149cebef949dd62b4cd66f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Update a patient",
                "description": "Updates an existing patient record",
                "operationId": "093362323957c9d2e06e6e5a5b62dad5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Delete a patient",
                "description": "Soft deletes an existing patient record",
                "operationId": "5bb34f128c3e09e6091bce05238b7edf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient deleted successfully"
                    }
                }
            }
        },
        "/api/v2/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get paginated users",
                "description": "Retrieves a paginated list of users with optional filters",
                "operationId": "811df0f5f0131a1a1dec528f80edd836",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: locations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedUserResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user",
                "description": "Retrieves a specific user by their ID",
                "operationId": "f69ac29d790fc951e7b30574078de477",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: locations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PaginatedConsentToTreatmentResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsentToTreatment"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedCrisisPlanResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CrisisPlan"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedDeEscalationTechniqueResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeEscalationTechnique"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedGeneralizationTrainingResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GeneralizationTraining"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedInsuranceResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Insurance"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedLocationResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedNoteBcbaResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NoteBcba"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/bcba?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/bcba?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/bcba"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "PaginatedNoteRbtResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NoteRbt"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/rbt?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/rbt?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/rbt"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "PaginatedPaServiceResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaService"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedOldPaServiceResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaService"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "RBT"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "api"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "register_rol"
                                },
                                "guard_name": {
                                    "type": "string",
                                    "example": "api"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "datetime",
                                    "example": "2024-11-19T17:18:13.000000Z"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "datetime",
                                    "example": "2024-11-19T17:18:13.000000Z"
                                },
                                "pivot": {
                                    "properties": {
                                        "role_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "permission_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "permissions_names": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "view_users"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-20 10:00:00"
                    }
                },
                "type": "object"
            },
            "PaginatedWeeklyReportResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeeklyReport"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/weekly-reports?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/weekly-reports?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/weekly-reports"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "PaginatedClaimResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Claim"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedPatientResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Patient"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedUserResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/users?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/users?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/users"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "Bip": {
                "title": "Bip",
                "description": "Behavior Intervention Plan (BIP) model. Contains all information about a patient's behavior intervention plan, with their subplans.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_identifier": {
                        "description": "Unique identifier for the patient",
                        "type": "string",
                        "example": "PAT123"
                    },
                    "client_id": {
                        "description": "ID of the client this BIP belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "doctor_id": {
                        "description": "ID of the supervising doctor",
                        "type": "integer",
                        "format": "int64",
                        "example": 1,
                        "nullable": true
                    },
                    "type_of_assessment": {
                        "description": "Type of assessment performed",
                        "type": "integer",
                        "format": "int32",
                        "example": 3
                    },
                    "documents_reviewed": {
                        "description": "List of documents reviewed during assessment",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "background_information": {
                        "description": "Patient's background information",
                        "type": "string",
                        "nullable": true
                    },
                    "previus_treatment_and_result": {
                        "description": "History of previous treatments and their outcomes",
                        "type": "string",
                        "nullable": true
                    },
                    "current_treatment_and_progress": {
                        "description": "Current treatment details and progress",
                        "type": "string",
                        "nullable": true
                    },
                    "education_status": {
                        "description": "Patient's educational background and status",
                        "type": "string",
                        "nullable": true
                    },
                    "physical_and_medical_status": {
                        "description": "Patient's physical and medical conditions",
                        "type": "string",
                        "nullable": true
                    },
                    "strengths": {
                        "description": "Patient's identified strengths",
                        "type": "string",
                        "nullable": true
                    },
                    "weakneses": {
                        "description": "Patient's identified weaknesses",
                        "type": "string",
                        "nullable": true
                    },
                    "physical_and_medical": {
                        "description": "List of patient's physical and medical information",
                        "type": "array",
                        "items": {
                            "properties": {
                                "index": {
                                    "description": "Index of the medical record",
                                    "type": "integer",
                                    "example": 1
                                },
                                "medication": {
                                    "description": "Name of medication",
                                    "type": "string",
                                    "example": "Methylphenidate"
                                },
                                "dose": {
                                    "description": "Medication dosage",
                                    "type": "string",
                                    "example": "10mg"
                                },
                                "frecuency": {
                                    "description": "Medication frequency",
                                    "type": "string",
                                    "example": "Twice daily"
                                },
                                "reason": {
                                    "description": "Reason for medication",
                                    "type": "string",
                                    "example": "ADHD management"
                                },
                                "preescribing_physician": {
                                    "description": "Name of prescribing physician",
                                    "type": "string",
                                    "example": "Dr. Smith"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "assestment_conducted": {
                        "description": "Details of conducted assessments",
                        "type": "string",
                        "nullable": true
                    },
                    "assestment_conducted_options": {
                        "description": "Types of assessments performed",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "assestment_evaluation_settings": {
                        "description": "Settings where assessments were conducted",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "prevalent_setting_event_and_atecedents": {
                        "description": "Common triggers and antecedents",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "hypothesis_based_intervention": {
                        "description": "Intervention strategy based on behavioral hypothesis",
                        "type": "string",
                        "nullable": true
                    },
                    "interventions": {
                        "description": "List of planned interventions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "tangibles": {
                        "description": "Tangible reinforcers",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "attention": {
                        "description": "Attention-based interventions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "escape": {
                        "description": "Escape-related behaviors and interventions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "sensory": {
                        "description": "Sensory-related behaviors and interventions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "maladaptives": {
                        "description": "Collection of maladaptive behavior plans. These plans focus on reducing problematic behaviors.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan"
                        }
                    },
                    "replacements": {
                        "description": "Collection of replacement behavior plans. These plans focus on teaching and increasing appropriate behaviors.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan"
                        }
                    },
                    "caregiver_trainings": {
                        "description": "Collection of caregiver training plans. These plans focus on teaching caregivers effective strategies.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan"
                        }
                    },
                    "rbt_trainings": {
                        "description": "Collection of RBT training plans. These plans focus on training Registered Behavior Technicians.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan"
                        }
                    },
                    "generalization_trainings": {
                        "description": "Collection of generalization training records. These document how skills are generalized across settings.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GeneralizationTraining"
                        }
                    },
                    "crisis_plans": {
                        "description": "Collection of crisis plans. These detail procedures for handling crisis situations.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CrisisPlan"
                        }
                    },
                    "de_escalation_techniques": {
                        "description": "Collection of de-escalation techniques. These detail strategies to prevent and manage escalating behaviors.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeEscalationTechnique"
                        }
                    },
                    "consent_to_treatments": {
                        "description": "Collection of consent to treatment records. These document patient/guardian consent for treatments.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsentToTreatment"
                        }
                    }
                },
                "type": "object"
            },
            "Objective": {
                "title": "Objective",
                "description": "Objective model for behavior intervention plans. Has multiple STOs and one LTO.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "plan_id": {
                        "description": "ID of the plan this objective belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "description": "STO = Short Term Objective (multiple allowed per plan), LTO = Long Term Objective (only one per plan).",
                        "type": "string",
                        "enum": [
                            "STO",
                            "LTO"
                        ],
                        "example": "STO"
                    },
                    "status": {
                        "description": "Current status of the objective. Affects data collection and progress tracking.",
                        "type": "string",
                        "enum": [
                            "in progress",
                            "mastered",
                            "not started",
                            "discontinued",
                            "maintenance"
                        ],
                        "example": "in progress"
                    },
                    "initial_date": {
                        "description": "Start date of the objective. Must be before end_date. Required when status changes from 'not started'.",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01",
                        "nullable": true
                    },
                    "end_date": {
                        "description": "End date of the objective. Must be after initial_date. Required when status changes from 'not started'.",
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-01",
                        "nullable": true
                    },
                    "description": {
                        "description": "Detailed description of what this objective aims to achieve. Should be specific and measurable.",
                        "type": "string",
                        "example": "Reduce inappropriate behavior to less than 5 instances per day"
                    },
                    "start_point": {
                        "description": "Starting point of the objective. For maladaptive plans: initial value, for replacement plans: 0, for training plans: 0.",
                        "type": "number",
                        "format": "float",
                        "example": 10,
                        "nullable": true
                    },
                    "target": {
                        "description": "Target value to achieve. For maladaptive plans: decreases, for replacement plans: increases, for training plans: mastery percentage.",
                        "type": "number",
                        "format": "float",
                        "example": 5,
                        "nullable": true
                    },
                    "order": {
                        "description": "Order of the objective. For LTOs, this is always 999. For STOs, this determines their sequence.",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Plan": {
                "title": "Plan",
                "description": "Plan model for behavior intervention strategies. Can be one of four types: maladaptive (for reducing problem behaviors),\n *         replacement (for teaching alternative behaviors), caregiver_training (for training caregivers), or rbt_training (for training RBTs).",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bip_id": {
                        "description": "ID of the BIP this plan belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the plan",
                        "type": "string",
                        "example": "Aggressive Behavior"
                    },
                    "description": {
                        "description": "Detailed description of the plan",
                        "type": "string",
                        "example": "Displays aggressive behavior towards others"
                    },
                    "baseline_level": {
                        "description": "Required for maladaptive and replacement plans. Initial baseline measurement.\n *             For maladaptive plans, represents frequency of behavior. For replacement plans, represents current skill level.",
                        "type": "integer",
                        "format": "int32",
                        "example": 5,
                        "nullable": true
                    },
                    "baseline_date": {
                        "description": "Required for maladaptive and replacement plans. Date when baseline was measured.",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01",
                        "nullable": true
                    },
                    "initial_intensity": {
                        "description": "Required for maladaptive and replacement plans. Initial intensity of the behavior (1-10 scale).",
                        "type": "integer",
                        "format": "int32",
                        "example": 7,
                        "nullable": true
                    },
                    "current_intensity": {
                        "description": "Required for maladaptive and replacement plans. Current intensity of the behavior (1-10 scale).",
                        "type": "integer",
                        "format": "int32",
                        "example": 4,
                        "nullable": true
                    },
                    "category": {
                        "description": "Category determines required fields and validation rules. Maladaptive and replacement plans require baseline fields.\n *             Each category has specific objective target rules.",
                        "type": "string",
                        "enum": [
                            "maladaptive",
                            "replacement",
                            "caregiver_training",
                            "rbt_training"
                        ],
                        "example": "maladaptive"
                    },
                    "status": {
                        "description": "Current status of the plan. Affects whether new objectives can be added.",
                        "type": "string",
                        "enum": [
                            "active",
                            "completed",
                            "hold",
                            "discontinued",
                            "maintenance",
                            "met",
                            "monitoring"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    },
                    "objectives": {
                        "description": "List of objectives associated with this plan. Each plan can have multiple STOs (Short Term Objectives)\n *             but only one LTO (Long Term Objective). STOs are ordered by their order field, while LTOs always have order=999.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Objective"
                        }
                    }
                },
                "type": "object"
            },
            "Claim": {
                "required": [
                    "status",
                    "rbt_notes_ids",
                    "bcba_notes_ids",
                    "filename",
                    "content"
                ],
                "properties": {
                    "id": {
                        "description": "Claim ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "description": "Status of the claim",
                        "type": "string",
                        "example": "pending"
                    },
                    "rbt_notes_ids": {
                        "description": "Array of RBT note IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "bcba_notes_ids": {
                        "description": "Array of BCBA note IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "filename": {
                        "description": "Name of the claim file",
                        "type": "string",
                        "example": "Claim.dat"
                    },
                    "content": {
                        "description": "Content of the claim file",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Insurance": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Insurance ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the insurance company",
                        "type": "string",
                        "example": "Blue Cross Blue Shield"
                    },
                    "services": {
                        "description": "JSON object containing service details including codes, provider, description, unit price, hourly fee, and max allowed",
                        "type": "object",
                        "example": {
                            "code": "97153",
                            "provider": "BCBA",
                            "description": "Adaptive behavior treatment",
                            "unit_price": 65,
                            "hourly_fee": 130,
                            "max_allowed": 40
                        }
                    },
                    "notes": {
                        "description": "JSON object containing additional notes and descriptions",
                        "type": "object",
                        "example": {
                            "description": "Primary insurance provider for ABA therapy services"
                        }
                    },
                    "payer_id": {
                        "description": "Payer code used for EDI X12",
                        "type": "string",
                        "example": "00123"
                    },
                    "street": {
                        "description": "Street address",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "street2": {
                        "description": "Additional street address information",
                        "type": "string",
                        "example": "Suite 100"
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "example": "Chicago"
                    },
                    "state": {
                        "description": "State code",
                        "type": "string",
                        "example": "IL"
                    },
                    "zip": {
                        "description": "ZIP/Postal code",
                        "type": "string",
                        "example": "60601"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Location": {
                "required": [
                    "title"
                ],
                "properties": {
                    "id": {
                        "description": "Location ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "description": "Location title/name",
                        "type": "string",
                        "maxLength": 150,
                        "example": "Main Office"
                    },
                    "address": {
                        "description": "Physical address of the location",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "phone1": {
                        "description": "Primary phone number",
                        "type": "string",
                        "maxLength": 50,
                        "example": "555-0123"
                    },
                    "phone2": {
                        "description": "Secondary phone number",
                        "type": "string",
                        "maxLength": 50,
                        "example": "555-0124"
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "maxLength": 150,
                        "example": "New York"
                    },
                    "state": {
                        "description": "State name",
                        "type": "string",
                        "maxLength": 150,
                        "example": "NY"
                    },
                    "zip": {
                        "description": "ZIP/Postal code",
                        "type": "string",
                        "maxLength": 150,
                        "example": "10001"
                    },
                    "email": {
                        "description": "Contact email address",
                        "type": "string",
                        "format": "email",
                        "maxLength": 150,
                        "example": "contact@location.com"
                    },
                    "telfax": {
                        "description": "Fax number",
                        "type": "string",
                        "example": "555-0125"
                    },
                    "avatar": {
                        "description": "URL to location's image/avatar",
                        "type": "string",
                        "example": "storage/locations/avatar.jpg"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 12:00:00"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 12:00:00"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "NoteBcba": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "insurance_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "patient_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "patient_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "doctor_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "bip_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "diagnosis_code": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "cpt_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "meet_with_client_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "pos": {
                        "type": "string",
                        "nullable": true
                    },
                    "participants": {
                        "type": "string",
                        "nullable": true
                    },
                    "environmental_changes": {
                        "type": "string",
                        "nullable": true
                    },
                    "session_date": {
                        "type": "string",
                        "format": "Y-m-d",
                        "nullable": true
                    },
                    "next_session_is_scheduled_for": {
                        "type": "string",
                        "format": "Y-m-d",
                        "nullable": true
                    },
                    "time_in": {
                        "type": "string",
                        "format": "H:i",
                        "nullable": true
                    },
                    "time_out": {
                        "type": "string",
                        "format": "H:i",
                        "nullable": true
                    },
                    "time_in2": {
                        "type": "string",
                        "format": "H:i",
                        "nullable": true
                    },
                    "time_out2": {
                        "type": "string",
                        "format": "H:i",
                        "nullable": true
                    },
                    "session_length_total": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "session_length_total2": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "note_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "rendering_provider": {
                        "type": "integer",
                        "nullable": true
                    },
                    "supervisor_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "provider_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "provider_signature": {
                        "type": "string",
                        "nullable": true
                    },
                    "supervisor_signature": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "ok",
                            "no",
                            "review"
                        ]
                    },
                    "summary_note": {
                        "type": "string",
                        "nullable": true
                    },
                    "billed": {
                        "type": "boolean",
                        "default": false
                    },
                    "paid": {
                        "type": "boolean",
                        "default": false
                    },
                    "location_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "pa_service_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "insuranceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "insurance_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "md": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "md2": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "md3": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "subtype": {
                        "type": "string",
                        "nullable": true
                    },
                    "BCBA_conducted_client_observations": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "BCBA_conducted_assessments": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "assessment_tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "intake_outcome": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "intervention_protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "replacement_protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "modifications_needed_at_this_time": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "additional_goals_or_interventions": {
                        "type": "string",
                        "nullable": true
                    },
                    "demonstrated_intervention_protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "demonstrated_replacement_protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "behavior_protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "caregiver_goals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "rbt_training_goals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "NoteRbt": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "session_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-11-05"
                    },
                    "next_session_is_scheduled_for": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-12 14:43:31"
                    },
                    "interventions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "positive_reinforcement"
                        }
                    },
                    "replacements": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "verbal_requests"
                                },
                                "total_trials": {
                                    "type": "integer",
                                    "example": 5
                                },
                                "correct_responses": {
                                    "type": "integer",
                                    "example": 4
                                }
                            },
                            "type": "object"
                        }
                    },
                    "maladaptives": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "tantrums"
                                },
                                "ocurrences": {
                                    "type": "integer",
                                    "example": 3
                                }
                            },
                            "type": "object"
                        }
                    },
                    "bip_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "insurance_identifier": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "pos": {
                        "type": "string",
                        "example": "12"
                    },
                    "environmental_changes": {
                        "type": "string",
                        "example": "None noted"
                    },
                    "provider_credential": {
                        "type": "string",
                        "example": "RBT"
                    },
                    "patient_id": {
                        "type": "string",
                        "example": "PAT001"
                    },
                    "doctor_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "meet_with_client_at": {
                        "type": "string",
                        "example": "Home"
                    },
                    "participants": {
                        "type": "string",
                        "example": "Home"
                    },
                    "time_in": {
                        "type": "string",
                        "example": " 09:00:00"
                    },
                    "time_out": {
                        "type": "string",
                        "example": " 11:00:00"
                    },
                    "time_in2": {
                        "type": "string",
                        "nullable": true
                    },
                    "time_out2": {
                        "type": "string",
                        "nullable": true
                    },
                    "session_length_morning_total": {
                        "type": "string",
                        "example": "02:00"
                    },
                    "session_length_afternon_total": {
                        "type": "string",
                        "example": "00:00"
                    },
                    "session_length_total": {
                        "type": "string",
                        "example": "02:00"
                    },
                    "total_hours": {
                        "type": "string",
                        "example": "02:00"
                    },
                    "client_appeared": {
                        "type": "string",
                        "example": "Alert and engaged"
                    },
                    "as_evidenced_by": {
                        "type": "string",
                        "example": "Active participation in activities"
                    },
                    "rbt_modeled_and_demonstrated_to_caregiver": {
                        "type": "string",
                        "example": "Positive reinforcement techniques"
                    },
                    "client_response_to_treatment_this_session": {
                        "type": "string",
                        "example": "Client showed good progress with verbal requests"
                    },
                    "progress_noted_this_session_compared_to_previous_session": {
                        "type": "string",
                        "example": "Improvement in communication skills"
                    },
                    "provider_signature": {
                        "type": "string",
                        "example": "Alice RBT"
                    },
                    "provider_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "pa_service_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "supervisor_signature": {
                        "type": "string",
                        "example": "Sarah BCBA"
                    },
                    "supervisor_name": {
                        "type": "integer",
                        "example": 3
                    },
                    "supervisor": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "Sarah BCBA"
                            },
                            "surname": {
                                "type": "string",
                                "nullable": true
                            },
                            "npi": {
                                "type": "string",
                                "example": "1234567890"
                            },
                            "electronic_signature": {
                                "type": "string",
                                "example": "signatures/example.png"
                            }
                        },
                        "type": "object"
                    },
                    "provider_name_g": {
                        "type": "string",
                        "nullable": true
                    },
                    "billed": {
                        "type": "integer",
                        "example": 0
                    },
                    "paid": {
                        "type": "integer",
                        "example": 0
                    },
                    "status": {
                        "type": "string",
                        "example": "ok"
                    },
                    "summary_note": {
                        "type": "string",
                        "nullable": true
                    },
                    "cpt_code": {
                        "type": "string",
                        "example": "97153"
                    },
                    "insuranceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "provider": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Alice RBT"
                            },
                            "surname": {
                                "type": "string",
                                "nullable": true
                            },
                            "npi": {
                                "type": "string",
                                "nullable": true
                            },
                            "electronic_signature": {
                                "type": "string",
                                "example": "signatures/example.png"
                            }
                        },
                        "type": "object"
                    },
                    "location_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_minutes": {
                        "type": "integer",
                        "example": 120
                    },
                    "total_units": {
                        "type": "integer",
                        "example": 8
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-10 14:43:31"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-10 14:43:31"
                    }
                },
                "type": "object"
            },
            "PaService": {
                "required": [
                    "patient_id",
                    "pa_services",
                    "cpt",
                    "n_units",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "pa_services": {
                        "type": "string",
                        "example": "Behavioral Analysis"
                    },
                    "cpt": {
                        "type": "string",
                        "example": "97151"
                    },
                    "n_units": {
                        "type": "integer",
                        "example": 8
                    },
                    "spent_units": {
                        "type": "integer",
                        "example": 0
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-01T12:00:00Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Patient": {
                "title": "Patient",
                "description": "Patient model",
                "properties": {
                    "id": {
                        "description": "Patient ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "location_id": {
                        "description": "Location ID",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "patient_id": {
                        "description": "External patient identifier",
                        "type": "string",
                        "nullable": true
                    },
                    "first_name": {
                        "description": "Patient's first name",
                        "type": "string",
                        "maxLength": 250
                    },
                    "last_name": {
                        "description": "Patient's last name",
                        "type": "string",
                        "maxLength": 250
                    },
                    "email": {
                        "description": "Patient's email",
                        "type": "string",
                        "format": "email",
                        "maxLength": 250,
                        "nullable": true
                    },
                    "phone": {
                        "description": "Patient's phone number",
                        "type": "string",
                        "maxLength": 25,
                        "nullable": true
                    },
                    "language": {
                        "description": "Patient's preferred language",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_guardian_name": {
                        "description": "Name of parent or guardian",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_gender": {
                        "description": "Parent or guardian's gender",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "nullable": true
                    },
                    "parent_birth_date": {
                        "description": "Parent or guardian's birth date",
                        "type": "string",
                        "format": "m-d-Y",
                        "nullable": true
                    },
                    "parent_address": {
                        "description": "Parent or guardian's address",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_city": {
                        "description": "Parent or guardian's city",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_state": {
                        "description": "Parent or guardian's state",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_zip": {
                        "description": "Parent or guardian's zip code",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "relationship": {
                        "description": "Relationship to patient",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "home_phone": {
                        "description": "Home phone number",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "work_phone": {
                        "description": "Work phone number",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "school_name": {
                        "description": "School name",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "school_number": {
                        "description": "School contact number",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "gender": {
                        "description": "Patient's gender",
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "birth_date": {
                        "description": "Patient's birth date",
                        "type": "string",
                        "format": "m-d-Y",
                        "nullable": true
                    },
                    "age": {
                        "description": "Patient's age (calculated from birth_date)",
                        "type": "integer",
                        "readOnly": true
                    },
                    "address": {
                        "description": "Patient's address",
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "description": "State",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "zip": {
                        "description": "ZIP code",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "avatar": {
                        "description": "Avatar image path",
                        "type": "string",
                        "nullable": true
                    },
                    "special_note": {
                        "description": "Special notes",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "Patient status",
                        "type": "string",
                        "default": "inactive",
                        "enum": [
                            "incoming",
                            "active",
                            "inactive",
                            "onHold",
                            "onDischarge",
                            "waitintOnPa",
                            "waitintOnPaIa",
                            "waitintOnIa",
                            "waitintOnServices",
                            "waitintOnStaff",
                            "waitintOnSchool"
                        ]
                    },
                    "insurer_id": {
                        "description": "Insurance ID",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "insurer_secondary_id": {
                        "description": "Insurance secondary ID",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "insurance_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "insurance_secondary_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "telehealth": {
                        "description": "Telehealth status",
                        "type": "boolean",
                        "default": false
                    },
                    "pay": {
                        "description": "Payment status",
                        "type": "boolean",
                        "default": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PatientIntake": {
                "title": "Patient Intake Status",
                "properties": {
                    "welcome": {
                        "type": "string",
                        "default": "waiting",
                        "enum": [
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "consent": {
                        "type": "string",
                        "default": "waiting",
                        "enum": [
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "insurance_card": {
                        "type": "string",
                        "default": "waiting",
                        "enum": [
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "eligibility": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "interview": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "send",
                            "receive",
                            "no apply"
                        ]
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "admin",
                            "user"
                        ]
                    },
                    "location_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Main Office"
                                },
                                "address": {
                                    "type": "string",
                                    "example": "123 Main St"
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "WeeklyReport": {
                "required": [
                    "plan_id",
                    "week_start",
                    "week_end",
                    "value"
                ],
                "properties": {
                    "id": {
                        "description": "Weekly report unique identifier",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "plan_id": {
                        "description": "ID of the associated plan",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "week_start": {
                        "description": "Start date of the week",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "week_end": {
                        "description": "End date of the week",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-07"
                    },
                    "value": {
                        "description": "Value for the weekly report",
                        "type": "integer",
                        "example": 75
                    },
                    "created_at": {
                        "description": "Timestamp of when the record was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-30T19:49:04.000000Z"
                    },
                    "updated_at": {
                        "description": "Timestamp of when the record was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-30T19:49:04.000000Z"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    }
                },
                "type": "object"
            },
            "ConsentToTreatment": {
                "title": "ConsentToTreatment",
                "description": "Model for documenting consent to treatment agreements",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bip_id": {
                        "description": "ID of the BIP this consent belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "analyst_signature": {
                        "description": "Signature of the analyst",
                        "type": "string"
                    },
                    "analyst_signature_date": {
                        "description": "Date of analyst signature",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "parent_guardian_signature": {
                        "description": "Signature of parent or guardian",
                        "type": "string"
                    },
                    "parent_guardian_signature_date": {
                        "description": "Date of parent/guardian signature",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CrisisPlan": {
                "title": "CrisisPlan",
                "description": "Model for documenting crisis management plans",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bip_id": {
                        "description": "ID of the BIP this crisis plan belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "crisis_description": {
                        "description": "Description of the crisis situation",
                        "type": "string"
                    },
                    "crisis_note": {
                        "description": "Additional notes about the crisis",
                        "type": "string"
                    },
                    "caregiver_requirements_for_prevention_of_crisis": {
                        "description": "Requirements for caregivers to prevent crisis",
                        "type": "string"
                    },
                    "risk_factors": {
                        "description": "List of risk factors",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "suicidalities": {
                        "description": "List of suicidality factors",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "homicidalities": {
                        "description": "List of homicidality factors",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DeEscalationTechnique": {
                "title": "DeEscalationTechnique",
                "description": "Model for documenting techniques used to prevent and manage escalating behaviors",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bip_id": {
                        "description": "ID of the BIP this technique belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "description": {
                        "description": "Description of the de-escalation technique",
                        "type": "string"
                    },
                    "service_recomendation": {
                        "description": "Service recommendations",
                        "type": "string"
                    },
                    "recomendation_lists": {
                        "description": "List of specific recommendations",
                        "type": "array",
                        "items": {
                            "properties": {
                                "cpt": {
                                    "description": "CPT code",
                                    "type": "string",
                                    "example": "97151"
                                },
                                "location": {
                                    "description": "Location where technique is applied",
                                    "type": "string",
                                    "example": "In Home/School"
                                },
                                "num_units": {
                                    "description": "Number of units",
                                    "type": "integer",
                                    "example": 32
                                },
                                "breakdown_per_week": {
                                    "description": "Weekly breakdown",
                                    "type": "string",
                                    "example": "8"
                                },
                                "description_service": {
                                    "description": "Service description",
                                    "type": "string",
                                    "example": "Assessment"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "GeneralizationTraining": {
                "title": "GeneralizationTraining",
                "description": "Model for documenting generalization training and transition plans",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bip_id": {
                        "description": "ID of the BIP this training belongs to",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "discharge_plan": {
                        "description": "Plan for discharge from services",
                        "type": "string"
                    },
                    "transition_fading_plans": {
                        "description": "List of transition and fading plans",
                        "type": "array",
                        "items": {
                            "properties": {
                                "transition_plan": {
                                    "description": "Description of the transition plan",
                                    "type": "string"
                                },
                                "fading_plan": {
                                    "description": "Description of the fading plan",
                                    "type": "string"
                                },
                                "timeline": {
                                    "description": "Timeline for the transition/fading plan",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "BIPs",
            "description": "BIPs"
        },
        {
            "name": "Admin/Consent To Treatments",
            "description": "Admin/Consent To Treatments"
        },
        {
            "name": "Admin/Crisis Plans",
            "description": "Admin/Crisis Plans"
        },
        {
            "name": "Admin/De-escalation Techniques",
            "description": "Admin/De-escalation Techniques"
        },
        {
            "name": "Admin/Generalization Trainings",
            "description": "Admin/Generalization Trainings"
        },
        {
            "name": "Objectives",
            "description": "Objectives"
        },
        {
            "name": "Plans",
            "description": "Plans"
        },
        {
            "name": "Admin/Insurance",
            "description": "Admin/Insurance"
        },
        {
            "name": "Admin/Locations",
            "description": "Admin/Locations"
        },
        {
            "name": "Admin/Notes",
            "description": "Admin/Notes"
        },
        {
            "name": "PA Services",
            "description": "PA Services"
        },
        {
            "name": "Old/PA Services",
            "description": "Old/PA Services"
        },
        {
            "name": "Admin/Roles",
            "description": "Admin/Roles"
        },
        {
            "name": "WeeklyReports",
            "description": "WeeklyReports"
        },
        {
            "name": "Claims",
            "description": "Claims"
        },
        {
            "name": "AI",
            "description": "AI"
        },
        {
            "name": "Admin/Patients",
            "description": "Admin/Patients"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}