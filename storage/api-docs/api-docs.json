{
    "openapi": "3.0.0",
    "info": {
        "title": "ABA App API",
        "version": "2.0"
    },
    "paths": {
        "/api/v2/bips": {
            "get": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Get all BIPs with filters",
                "operationId": "a3c6a76edc377107281ee77209fe443a",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "doctor_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type_of_assessment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Bip"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Create a new BIP",
                "operationId": "745934bd241537d5a510d1180a25867c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bip"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "BIP created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BIP created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/bips/{id}": {
            "get": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Get BIP by ID",
                "operationId": "1b7d71ea378b74665f775f39ea52708e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BIP not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Update a BIP",
                "operationId": "39f9d961db9b97f3c6e5af365fb06f70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bip"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "BIP updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BIP updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bip"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BIP not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BIPs"
                ],
                "summary": "Delete a BIP",
                "operationId": "b120c040ee4b8bc5d54365a7e4ec74f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BIP deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BIP deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BIP not found"
                    }
                }
            }
        },
        "/api/v2/long-term-objectives": {
            "get": {
                "tags": [
                    "Long Term Objectives"
                ],
                "summary": "Get all Long Term Objectives with filters",
                "operationId": "11abb4b06d49a4e8a0263ba2fae26942",
                "parameters": [
                    {
                        "name": "reduction_goal_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Long Term Objectives"
                ],
                "summary": "Create a new Long Term Objective",
                "operationId": "153a9a9b736bab9db80a24f185e7eef9",
                "responses": {
                    "201": {
                        "description": "Objective created successfully"
                    }
                }
            }
        },
        "/api/v2/long-term-objectives/{id}": {
            "get": {
                "tags": [
                    "Long Term Objectives"
                ],
                "summary": "Get Long Term Objective by ID",
                "operationId": "3245fbf787e043dca9d561f1738430e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Long Term Objectives"
                ],
                "summary": "Update a Long Term Objective",
                "operationId": "cc71e5ed8c1fa0c558ba8fe7e0215e93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objective updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Long Term Objectives"
                ],
                "summary": "Delete a Long Term Objective",
                "operationId": "4076b7bbcb35ba2a907beb420b3355c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objective deleted successfully"
                    }
                }
            }
        },
        "/api/v2/reduction-goals": {
            "get": {
                "tags": [
                    "Reduction Goals"
                ],
                "summary": "Get all Reduction Goals with filters",
                "operationId": "4a4cc6b11fc55cb6967ffbde936142e5",
                "parameters": [
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "patient_identifier",
                        "in": "query",
                        "description": "Filter by patient identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "Filter by client ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/ReductionGoal"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Reduction Goals"
                ],
                "summary": "Create a new Reduction Goal",
                "operationId": "072ae50ab21dbe0c3ce571907459c1cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bip_id",
                                    "patient_identifier",
                                    "client_id",
                                    "current_status",
                                    "maladaptive"
                                ],
                                "properties": {
                                    "bip_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "patient_identifier": {
                                        "type": "string",
                                        "example": "PAT001"
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "current_status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "on hold",
                                            "discontinued"
                                        ],
                                        "example": "active"
                                    },
                                    "maladaptive": {
                                        "type": "string",
                                        "example": "Inappropriate Language"
                                    },
                                    "long_term_objective": {
                                        "$ref": "#/components/schemas/LongTermObjective"
                                    },
                                    "short_term_objectives": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ShortTermObjective"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Goal created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reduction goal created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReductionGoal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/reduction-goals/{id}": {
            "get": {
                "tags": [
                    "Reduction Goals"
                ],
                "summary": "Get Reduction Goal by ID",
                "operationId": "adb401723f90bf4f850b0a15d4928f0f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reduction Goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReductionGoal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Goal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reduction goal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Reduction Goals"
                ],
                "summary": "Update a Reduction Goal",
                "operationId": "dfae602c79b78d8a4f0a42d3f8937daa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reduction Goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bip_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "patient_identifier": {
                                        "type": "string",
                                        "example": "PAT001"
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "current_status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "on hold",
                                            "discontinued"
                                        ],
                                        "example": "active"
                                    },
                                    "maladaptive": {
                                        "type": "string",
                                        "example": "Inappropriate Language"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Goal updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reduction goal updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ReductionGoal"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Goal not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reduction Goals"
                ],
                "summary": "Delete a Reduction Goal",
                "operationId": "6173c5de8f0149b1f11932e3df12f822",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reduction Goal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reduction goal deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Goal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reduction goal not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/short-term-objectives": {
            "get": {
                "tags": [
                    "Short Term Objectives"
                ],
                "summary": "Get all Short Term Objectives with filters",
                "operationId": "8c5a636f907e12707b6819fbd2c9b49c",
                "parameters": [
                    {
                        "name": "reduction_goal_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Short Term Objectives"
                ],
                "summary": "Create a new Short Term Objective",
                "operationId": "d6ee4ad58a238e0b619b861ca434eb9d",
                "responses": {
                    "201": {
                        "description": "Objective created successfully"
                    }
                }
            }
        },
        "/api/v2/short-term-objectives/{id}": {
            "get": {
                "tags": [
                    "Short Term Objectives"
                ],
                "summary": "Get Short Term Objective by ID",
                "operationId": "8a218d5f10b0e9b047901b1a8ac3fe33",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Short Term Objectives"
                ],
                "summary": "Update a Short Term Objective",
                "operationId": "b78c351f461598c1a384b444684cdcd0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objective updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Short Term Objectives"
                ],
                "summary": "Delete a Short Term Objective",
                "operationId": "dfa8b328882a0663e0c865d7829ef6a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objective deleted successfully"
                    }
                }
            }
        },
        "/api/v2/short-term-objectives/reorder": {
            "post": {
                "tags": [
                    "Short Term Objectives"
                ],
                "summary": "Reorder Short Term Objectives",
                "description": "Update the order of multiple short term objectives at once. All objectives must belong to the same reduction goal.",
                "operationId": "e57e235e7a74433a211ac8feb2869857",
                "requestBody": {
                    "description": "Array of objectives with their new order positions",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "objectives"
                                ],
                                "properties": {
                                    "objectives": {
                                        "description": "List of objectives to reorder. All objectives should belong to the same reduction goal.",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "order"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "The ID of the short term objective",
                                                    "type": "integer"
                                                },
                                                "order": {
                                                    "description": "The new position in the order sequence (starting from 1)",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1,
                                                "order": 3
                                            },
                                            {
                                                "id": 2,
                                                "order": 1
                                            },
                                            {
                                                "id": 3,
                                                "order": 2
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Objectives reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Short term objectives reordered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "objectives": [
                                                    "The objectives field is required."
                                                ],
                                                "objectives.0.id": [
                                                    "The objectives.0.id field is required."
                                                ],
                                                "objectives.0.order": [
                                                    "The objectives.0.order must be at least 1."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/insurance": {
            "get": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Get paginated insurance list",
                "description": "Retrieves a paginated list of insurance with optional filters",
                "operationId": "2fc52d5babe24cad601e5b95bb867bf4",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedInsuranceResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Create a new insurance",
                "description": "Creates a new insurance record",
                "operationId": "115dd62f9d8140618ed8798e779d8e71",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "services": {
                                        "type": "object"
                                    },
                                    "notes": {
                                        "type": "object"
                                    },
                                    "payer_id": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "street2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "is_self_subscriber": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Insurance created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Insurance created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Insurance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/insurance/{id}": {
            "get": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Get a single insurance",
                "description": "Retrieves a specific insurance by its ID",
                "operationId": "ba976c601f2050971e7022da72ae1662",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Insurance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Insurance not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Update an insurance",
                "description": "Updates an existing insurance record",
                "operationId": "2d01fd93f1a87b86e8021fdff009d336",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "services": {
                                        "type": "object"
                                    },
                                    "notes": {
                                        "type": "object"
                                    },
                                    "payer_id": {
                                        "type": "string"
                                    },
                                    "street": {
                                        "type": "string"
                                    },
                                    "street2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Insurance updated successfully"
                    },
                    "404": {
                        "description": "Insurance not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Insurance"
                ],
                "summary": "Delete an insurance",
                "description": "Deletes an existing insurance record",
                "operationId": "f38d0bf45649ddcbdf987244e9ddd1a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Insurance deleted successfully"
                    },
                    "404": {
                        "description": "Insurance not found"
                    }
                }
            }
        },
        "/api/v2/locations": {
            "get": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Get paginated locations list",
                "description": "Retrieves a paginated list of locations with optional filters",
                "operationId": "029b3b170bf762dd510de162b3c448fe",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by location title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "description": "Filter by zip code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedLocationResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Create a new location",
                "description": "Creates a new location record",
                "operationId": "25ffe663afdb0680da2be674880f31f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "city",
                                    "state"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "phone1": {
                                        "type": "string"
                                    },
                                    "phone2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "telfax": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully"
                    }
                }
            }
        },
        "/api/v2/locations/{id}": {
            "get": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Get a single location",
                "description": "Retrieves a specific location by its ID",
                "operationId": "e083830718ae2c88846286f3e5e076dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Update a location",
                "description": "Updates an existing location record",
                "operationId": "014e080f772ff357e8d1125da701324b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "phone1": {
                                        "type": "string"
                                    },
                                    "phone2": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "telfax": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Locations"
                ],
                "summary": "Delete a location",
                "description": "Deletes an existing location record",
                "operationId": "5cf99e3577a14bb9abe3657f6644a4cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                }
            }
        },
        "/api/v2/notes/bcba": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get paginated BCBA notes",
                "description": "Retrieves a paginated list of BCBA notes with optional filters",
                "operationId": "77cb7895f09db2d25e17e95a758f14a8",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter by patient ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "patient_identifier",
                        "in": "query",
                        "description": "Filter by patient identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedNoteBcbaResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Create a new BCBA note",
                "description": "Creates a new BCBA note with the provided data",
                "operationId": "682c11713646fdadc80b56e53a12b2e2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "session_date"
                                ],
                                "properties": {
                                    "insurance_id": {
                                        "type": "integer"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "patient_identifier": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "diagnosis_code": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "note_description": {
                                        "type": "string"
                                    },
                                    "session_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "session_length_total": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "supervisor_id": {
                                        "type": "integer"
                                    },
                                    "caregiver_goals": {
                                        "type": "object"
                                    },
                                    "rbt_training_goals": {
                                        "type": "object"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteBcba"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/notes/bcba/{id}": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get a single BCBA note",
                "description": "Retrieves a specific BCBA note by its ID",
                "operationId": "437afcd44b119a8e18f0d0ef327cec3a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteBcba"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Update a BCBA note",
                "description": "Updates an existing BCBA note",
                "operationId": "ebd7a029fb12ef32e6f207b201ed9507",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_date",
                                    "patient_id"
                                ],
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Delete a BCBA note",
                "description": "Deletes an existing BCBA note",
                "operationId": "b198c3b35398b16856b545583c7dbc59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Partially update a BCBA note",
                "description": "Updates specific fields of an existing BCBA note",
                "operationId": "3055e8303049bca0979a90a9bf9b68ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the BCBA note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "diagnosis_code": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 50
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "note_description": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "H:i:s"
                                    },
                                    "session_length_total": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "supervisor_id": {
                                        "type": "integer"
                                    },
                                    "caregiver_goals": {
                                        "type": "object"
                                    },
                                    "rbt_training_goals": {
                                        "type": "object"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteBcba"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/notes/rbt": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get paginated RBT notes",
                "description": "Retrieves a paginated list of RBT notes with optional filters",
                "operationId": "0e451d24e5a9659f9a5e2e506f2ce081",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter by patient ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "patient_identifier",
                        "in": "query",
                        "description": "Filter by patient identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "doctor_id",
                        "in": "query",
                        "description": "Filter by doctor ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "description": "Filter by provider ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bip_id",
                        "in": "query",
                        "description": "Filter by BIP ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date for filtering (Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedNoteRbtResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Create a new RBT note",
                "description": "Creates a new RBT note with the provided data",
                "operationId": "379713f09a8a3fc9e7d0918007f00f44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_date",
                                    "patient_id",
                                    "doctor_id"
                                ],
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-01"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00:00"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00:00"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "object"
                                    },
                                    "replacements": {
                                        "type": "object"
                                    },
                                    "interventions": {
                                        "type": "object"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "client_appeared": {
                                        "type": "string"
                                    },
                                    "as_evidenced_by": {
                                        "type": "string"
                                    },
                                    "rbt_modeled_and_demonstrated_to_caregiver": {
                                        "type": "string"
                                    },
                                    "client_response_to_treatment_this_session": {
                                        "type": "string"
                                    },
                                    "progress_noted_this_session_compared_to_previous_session": {
                                        "type": "string"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_credential": {
                                        "type": "string"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "supervisor_name": {
                                        "type": "integer"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/notes/rbt/{id}": {
            "get": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Get a single RBT note",
                "description": "Retrieves a specific RBT note by its ID",
                "operationId": "66d698c39561942aabd064f22901060d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: patient, bip, location, provider, supervisor, doctor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Update an RBT note",
                "description": "Updates an existing RBT note",
                "operationId": "c5595abc6308b393aab21756895d32e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "session_date",
                                    "patient_id",
                                    "doctor_id"
                                ],
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-01T00:00:00Z"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00:00"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00:00"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "object"
                                    },
                                    "replacements": {
                                        "type": "object"
                                    },
                                    "interventions": {
                                        "type": "object"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "client_appeared": {
                                        "type": "string"
                                    },
                                    "as_evidenced_by": {
                                        "type": "string"
                                    },
                                    "rbt_modeled_and_demonstrated_to_caregiver": {
                                        "type": "string"
                                    },
                                    "client_response_to_treatment_this_session": {
                                        "type": "string"
                                    },
                                    "progress_noted_this_session_compared_to_previous_session": {
                                        "type": "string"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_credential": {
                                        "type": "string"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "supervisor_name": {
                                        "type": "integer"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Delete an RBT note",
                "description": "Deletes an existing RBT note",
                "operationId": "8525e4ad5e17a08fd822746c39a47349",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Admin/Notes"
                ],
                "summary": "Partially update an RBT note",
                "description": "Updates specific fields of an existing RBT note",
                "operationId": "a3bb68e69cee5d0dd60d0b1f526c4495",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the RBT note",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "session_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-01T00:00:00Z"
                                    },
                                    "patient_id": {
                                        "type": "integer"
                                    },
                                    "doctor_id": {
                                        "type": "integer"
                                    },
                                    "bip_id": {
                                        "type": "integer"
                                    },
                                    "pos": {
                                        "type": "string"
                                    },
                                    "time_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "time_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "time_in2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00:00"
                                    },
                                    "time_out2": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:00:00"
                                    },
                                    "environmental_changes": {
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "object"
                                    },
                                    "replacements": {
                                        "type": "object"
                                    },
                                    "interventions": {
                                        "type": "object"
                                    },
                                    "meet_with_client_at": {
                                        "type": "string"
                                    },
                                    "client_appeared": {
                                        "type": "string"
                                    },
                                    "as_evidenced_by": {
                                        "type": "string"
                                    },
                                    "rbt_modeled_and_demonstrated_to_caregiver": {
                                        "type": "string"
                                    },
                                    "client_response_to_treatment_this_session": {
                                        "type": "string"
                                    },
                                    "progress_noted_this_session_compared_to_previous_session": {
                                        "type": "string"
                                    },
                                    "next_session_is_scheduled_for": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    },
                                    "provider_signature": {
                                        "type": "string"
                                    },
                                    "provider_credential": {
                                        "type": "string"
                                    },
                                    "supervisor_signature": {
                                        "type": "string"
                                    },
                                    "supervisor_name": {
                                        "type": "integer"
                                    },
                                    "billed": {
                                        "type": "boolean"
                                    },
                                    "paid": {
                                        "type": "boolean"
                                    },
                                    "cpt_code": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ok",
                                            "no",
                                            "review"
                                        ]
                                    },
                                    "summary_note": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "pa_service_id": {
                                        "type": "integer"
                                    },
                                    "insuranceId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/NoteRbt"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Note not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/patients/{patient_id}/pa-services": {
            "get": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Get all PA services for a patient",
                "operationId": "dca1262bb8f49350e75acfa515056707",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of PA services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pa_services": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PaService"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Create a new PA service",
                "operationId": "83268284fcc6eaa09dd3947211de6ab8",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pa_service",
                                    "cpt",
                                    "n_units",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PA service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PA service created successfully"
                                        },
                                        "pa_service": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/patients/{patient_id}/pa-services/{id}": {
            "get": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Get a specific PA service",
                "operationId": "de7e896529d5c12cff225030487dc207",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the PA service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pa_service": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient or PA service not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Update a PA service",
                "operationId": "da06ce8f6d58d595dbbfdd5b4210508a",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the PA service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PA service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PA service updated successfully"
                                        },
                                        "pa_service": {
                                            "$ref": "#/components/schemas/PaService"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient or PA service not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PA Services"
                ],
                "summary": "Delete a PA service",
                "operationId": "9d89d7a343dc2027366f53c22e3f6150",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the PA service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "PA service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient or PA service not found"
                    }
                }
            }
        },
        "/api/v2/patients/{patient_id}/pa-services": {
            "get": {
                "tags": [
                    "Admin/PA Services"
                ],
                "summary": "Get paginated PA services list for a patient",
                "operationId": "1f0487852b4957237caac5a3b2abe153",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedPaServiceResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/PA Services"
                ],
                "summary": "Create a new PA service",
                "operationId": "2a936b7250606d99539722846b315e55",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pa_service",
                                    "cpt",
                                    "n_units",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "pa_service": {
                                        "type": "string",
                                        "example": "Behavioral Analysis"
                                    },
                                    "cpt": {
                                        "type": "string",
                                        "example": "97151"
                                    },
                                    "n_units": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "PA service created successfully"
                    }
                }
            }
        },
        "/api/v2/patients/{patient_id}/pa-services/{id}": {
            "get": {
                "tags": [
                    "Admin/PA Services"
                ],
                "summary": "Get a single PA service",
                "operationId": "d3fcce7d0ae49f17eeaa0e537706d6c0",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/PA Services"
                ],
                "summary": "Delete a PA service",
                "operationId": "381f42d90beb0df64630315880b1b1ad",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PA service deleted successfully"
                    }
                }
            }
        },
        "/api/v2/patients/{patient_identfifier}/pa-services/{id}": {
            "put": {
                "tags": [
                    "Admin/PA Services"
                ],
                "summary": "Update a PA service",
                "operationId": "243d651e85087c15d448ace65a108a8e",
                "parameters": [
                    {
                        "name": "patient_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pa_service": {
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "type": "string"
                                    },
                                    "n_units": {
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PA service updated successfully"
                    }
                }
            }
        },
        "/api/v2/roles": {
            "get": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Get paginated roles",
                "description": "Retrieves a paginated list of roles with optional search filter",
                "operationId": "7ef8da7123353e3edf3003e17501b646",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search roles by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Create a new role",
                "description": "Creates a new role with the specified permissions",
                "operationId": "ddc26a6207c9461868dd202674052528",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "RBT"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "view_users"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v2/roles/{id}": {
            "get": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Get a single role",
                "description": "Retrieves a specific role by its ID",
                "operationId": "0715cbf1198362be2a9b4cdc6b64ad2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Update a role",
                "description": "Updates an existing role",
                "operationId": "db0bf0c88b2faa0ea634ceafd6b9a1cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "RBT"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "view_users"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Roles"
                ],
                "summary": "Delete a role",
                "description": "Deletes an existing role if it has no associated users",
                "operationId": "45caa799970d9a8b37b150c9aef5aca8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "403": {
                        "description": "Role cannot be deleted due to associated users"
                    }
                }
            }
        },
        "/api/v2/claims": {
            "get": {
                "tags": [
                    "Claims"
                ],
                "summary": "Get paginated claims list",
                "description": "Retrieves a paginated list of claims with optional filters",
                "operationId": "b61945fef6f70bd539f230f9afa932eb",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filename",
                        "in": "query",
                        "description": "Filter by filename",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter by start date (Y-m-d)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter by end date (Y-m-d)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "rbt_note_ids",
                        "in": "query",
                        "description": "Filter by RBT note IDs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "bcba_note_ids",
                        "in": "query",
                        "description": "Filter by BCBA note IDs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedClaimResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Claims"
                ],
                "summary": "Create a new claim",
                "operationId": "c520f5135ada58d85c382a1418eea10b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes_rbt_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "notes_bcba_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "file_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Claim created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Claim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/v2/claims/{id}": {
            "get": {
                "tags": [
                    "Claims"
                ],
                "summary": "Get a single claim",
                "operationId": "798077ee6b8d531f2191eb19dde881cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Claim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Claims"
                ],
                "summary": "Update a claim",
                "operationId": "6c572229a6aabd60e0c4e533d526f507",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes_rbt_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "notes_bcba_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "file_name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Claim updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Claim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Claims"
                ],
                "summary": "Delete a claim",
                "operationId": "dfad1c3361ce9467b4f408f51a02743e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            }
        },
        "/api/v2/claims/{id}/send-to-claim-md": {
            "post": {
                "tags": [
                    "Claims"
                ],
                "summary": "Send a claim to Claim MD",
                "operationId": "9dcadc784968b948aa62b4631a4da03f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Claim ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Claim sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Claim not found"
                    }
                }
            }
        },
        "/api/note_rbt/generate-summary": {
            "post": {
                "tags": [
                    "AI"
                ],
                "summary": "Generate RBT session summary",
                "operationId": "2ff9812b75aa85bb2a5ae57a9d707977",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "diagnosis",
                                    "maladaptives",
                                    "replacements",
                                    "interventions"
                                ],
                                "properties": {
                                    "diagnosis": {
                                        "description": "Patient's diagnosis",
                                        "type": "string"
                                    },
                                    "birthDate": {
                                        "description": "Patient's birth date",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "startTime": {
                                        "description": "Session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "description": "Session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "startTime2": {
                                        "description": "Second session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime2": {
                                        "description": "Second session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "mood": {
                                        "description": "Patient's mood during session",
                                        "type": "string"
                                    },
                                    "pos": {
                                        "description": "Place of service",
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "description": "CPT code",
                                        "type": "string"
                                    },
                                    "maladaptives": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "behavior": {
                                                    "type": "string"
                                                },
                                                "frequency": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "replacements": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "totalTrials": {
                                                    "type": "integer"
                                                },
                                                "correctResponses": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "interventions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "summary": {
                                            "description": "Generated summary text",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/note_bcba/generate-summary": {
            "post": {
                "tags": [
                    "AI"
                ],
                "summary": "Generate BCBA supervision summary",
                "operationId": "ccaaf40c473232b17700215ee48d8ae7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "diagnosis",
                                    "caregiverGoals",
                                    "rbtTrainingGoals",
                                    "noteDescription"
                                ],
                                "properties": {
                                    "diagnosis": {
                                        "description": "Patient's diagnosis",
                                        "type": "string"
                                    },
                                    "birthDate": {
                                        "description": "Patient's birth date",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "startTime": {
                                        "description": "Session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime": {
                                        "description": "Session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "startTime2": {
                                        "description": "Second session start time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "endTime2": {
                                        "description": "Second session end time (HH:MM format)",
                                        "type": "string"
                                    },
                                    "pos": {
                                        "description": "Place of service",
                                        "type": "string"
                                    },
                                    "cpt": {
                                        "description": "CPT code",
                                        "type": "string"
                                    },
                                    "caregiverGoals": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "goal": {
                                                    "type": "string"
                                                },
                                                "percentCorrect": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "rbtTrainingGoals": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "goal": {
                                                    "type": "string"
                                                },
                                                "percentCorrect": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "noteDescription": {
                                        "description": "Session description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "summary": {
                                            "description": "Generated summary text",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/patients": {
            "get": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Get paginated patients list",
                "description": "Retrieves a paginated list of patients with optional filters",
                "operationId": "11a3a3c89a6814a07c7929ceb80e3dce",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: insurance",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in first name, last name and email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "patient_id",
                        "in": "query",
                        "description": "Filter by patient ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "Filter by gender",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "insurer_id",
                        "in": "query",
                        "description": "Filter by insurance provider",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Filter by city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedPatientResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Create a new patient",
                "description": "Creates a new patient record",
                "operationId": "b1f515c3ab420b10115baed071c58b5d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Patient created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/patients/{id}": {
            "get": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Get a single patient",
                "description": "Retrieves a specific patient by their ID",
                "operationId": "63f934a42e149cebef949dd62b4cd66f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Patient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Update a patient",
                "description": "Updates an existing patient record",
                "operationId": "093362323957c9d2e06e6e5a5b62dad5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patient"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin/Patients"
                ],
                "summary": "Delete a patient",
                "description": "Soft deletes an existing patient record",
                "operationId": "5bb34f128c3e09e6091bce05238b7edf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient deleted successfully"
                    }
                }
            }
        },
        "/api/v2/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get paginated users",
                "description": "Retrieves a paginated list of users with optional filters",
                "operationId": "811df0f5f0131a1a1dec528f80edd836",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: locations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PaginatedUserResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user",
                "description": "Retrieves a specific user by their ID",
                "operationId": "f69ac29d790fc951e7b30574078de477",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Include related models (comma-separated). Options: locations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PaginatedInsuranceResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Insurance"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedLocationResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedNoteBcbaResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NoteBcba"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/bcba?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/bcba?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/bcba"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "PaginatedNoteRbtResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NoteRbt"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/rbt?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/rbt?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/notes/rbt"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "PaginatedPaServiceResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaService"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "RBT"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "api"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "register_rol"
                                },
                                "guard_name": {
                                    "type": "string",
                                    "example": "api"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "datetime",
                                    "example": "2024-11-19T17:18:13.000000Z"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "datetime",
                                    "example": "2024-11-19T17:18:13.000000Z"
                                },
                                "pivot": {
                                    "properties": {
                                        "role_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "permission_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "permissions_names": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "view_users"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-20 10:00:00"
                    }
                },
                "type": "object"
            },
            "PaginatedClaimResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Claim"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedPatientResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Patient"
                        }
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PaginatedUserResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/users?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v2/users?page=1"
                    },
                    "next_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v2/users"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "Bip": {
                "title": "Bip",
                "description": "Behavior Intervention Plan model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "client_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "string",
                        "maxLength": 50,
                        "example": "PAT123",
                        "nullable": true
                    },
                    "doctor_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1,
                        "nullable": true
                    },
                    "type_of_assessment": {
                        "type": "integer",
                        "format": "int32",
                        "example": 3
                    },
                    "documents_reviewed": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "background_information": {
                        "type": "string",
                        "nullable": true
                    },
                    "previus_treatment_and_result": {
                        "type": "string",
                        "nullable": true
                    },
                    "current_treatment_and_progress": {
                        "type": "string",
                        "nullable": true
                    },
                    "education_status": {
                        "type": "string",
                        "nullable": true
                    },
                    "phisical_and_medical_status": {
                        "type": "string",
                        "nullable": true
                    },
                    "strengths": {
                        "type": "string",
                        "nullable": true
                    },
                    "weakneses": {
                        "type": "string",
                        "nullable": true
                    },
                    "phiysical_and_medical": {
                        "type": "string",
                        "nullable": true
                    },
                    "phiysical_and_medical_status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "maladaptives": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "assestment_conducted": {
                        "type": "string",
                        "nullable": true
                    },
                    "assestment_conducted_options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "assestmentEvaluationSettings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "prevalent_setting_event_and_atecedents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "hypothesis_based_intervention": {
                        "type": "string",
                        "nullable": true
                    },
                    "interventions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "tangibles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "attention": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "escape": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "sensory": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LongTermObjective": {
                "title": "Long Term Objective",
                "description": "A long-term objective for a reduction goal",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reduction_goal_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in progress",
                            "mastered",
                            "initiated",
                            "on hold",
                            "discontinued",
                            "maintenance"
                        ],
                        "example": "in progress"
                    },
                    "initial_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-06-01"
                    },
                    "description": {
                        "type": "string",
                        "example": "Reduce inappropriate language usage by 80% in all settings"
                    },
                    "target": {
                        "type": "number",
                        "format": "float",
                        "example": 80
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ReductionGoal": {
                "title": "Reduction Goal",
                "description": "A goal to reduce maladaptive behaviors",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "bip_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_identifier": {
                        "type": "string",
                        "example": "PAT001"
                    },
                    "client_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "current_status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "completed",
                            "on hold",
                            "discontinued"
                        ],
                        "example": "active"
                    },
                    "maladaptive": {
                        "type": "string",
                        "example": "Inappropriate Language"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    },
                    "long_term_objective": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/LongTermObjective"
                            }
                        ],
                        "nullable": true
                    },
                    "short_term_objectives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShortTermObjective"
                        }
                    }
                },
                "type": "object"
            },
            "ShortTermObjective": {
                "title": "Short Term Objective",
                "description": "A short-term objective for a reduction goal",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "reduction_goal_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in progress",
                            "mastered",
                            "initiated",
                            "on hold",
                            "discontinued",
                            "maintenance"
                        ],
                        "example": "in progress"
                    },
                    "initial_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-01"
                    },
                    "description": {
                        "type": "string",
                        "example": "Use appropriate language in classroom settings"
                    },
                    "target": {
                        "type": "number",
                        "format": "float",
                        "example": 60
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Claim": {
                "required": [
                    "status",
                    "rbt_notes_ids",
                    "bcba_notes_ids",
                    "filename",
                    "content"
                ],
                "properties": {
                    "id": {
                        "description": "Claim ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "description": "Status of the claim",
                        "type": "string",
                        "example": "pending"
                    },
                    "rbt_notes_ids": {
                        "description": "Array of RBT note IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "bcba_notes_ids": {
                        "description": "Array of BCBA note IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "filename": {
                        "description": "Name of the claim file",
                        "type": "string",
                        "example": "Claim.dat"
                    },
                    "content": {
                        "description": "Content of the claim file",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Insurance": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Insurance ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Name of the insurance company",
                        "type": "string",
                        "example": "Blue Cross Blue Shield"
                    },
                    "services": {
                        "description": "JSON object containing service details including codes, provider, description, unit price, hourly fee, and max allowed",
                        "type": "object",
                        "example": {
                            "code": "97153",
                            "provider": "BCBA",
                            "description": "Adaptive behavior treatment",
                            "unit_price": 65,
                            "hourly_fee": 130,
                            "max_allowed": 40
                        }
                    },
                    "notes": {
                        "description": "JSON object containing additional notes and descriptions",
                        "type": "object",
                        "example": {
                            "description": "Primary insurance provider for ABA therapy services"
                        }
                    },
                    "payer_id": {
                        "description": "Payer code used for EDI X12",
                        "type": "string",
                        "example": "00123"
                    },
                    "street": {
                        "description": "Street address",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "street2": {
                        "description": "Additional street address information",
                        "type": "string",
                        "example": "Suite 100"
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "example": "Chicago"
                    },
                    "state": {
                        "description": "State code",
                        "type": "string",
                        "example": "IL"
                    },
                    "zip": {
                        "description": "ZIP/Postal code",
                        "type": "string",
                        "example": "60601"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Location": {
                "required": [
                    "title"
                ],
                "properties": {
                    "id": {
                        "description": "Location ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "description": "Location title/name",
                        "type": "string",
                        "maxLength": 150,
                        "example": "Main Office"
                    },
                    "address": {
                        "description": "Physical address of the location",
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "phone1": {
                        "description": "Primary phone number",
                        "type": "string",
                        "maxLength": 50,
                        "example": "555-0123"
                    },
                    "phone2": {
                        "description": "Secondary phone number",
                        "type": "string",
                        "maxLength": 50,
                        "example": "555-0124"
                    },
                    "city": {
                        "description": "City name",
                        "type": "string",
                        "maxLength": 150,
                        "example": "New York"
                    },
                    "state": {
                        "description": "State name",
                        "type": "string",
                        "maxLength": 150,
                        "example": "NY"
                    },
                    "zip": {
                        "description": "ZIP/Postal code",
                        "type": "string",
                        "maxLength": 150,
                        "example": "10001"
                    },
                    "email": {
                        "description": "Contact email address",
                        "type": "string",
                        "format": "email",
                        "maxLength": 150,
                        "example": "contact@location.com"
                    },
                    "telfax": {
                        "description": "Fax number",
                        "type": "string",
                        "example": "555-0125"
                    },
                    "avatar": {
                        "description": "URL to location's image/avatar",
                        "type": "string",
                        "example": "storage/locations/avatar.jpg"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 12:00:00"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 12:00:00"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "NoteBcba": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "insurance_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "patient_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "doctor_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "bip_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "insurance_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "diagnosis_code": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "meet_with_client_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "session_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "time_in": {
                        "type": "string",
                        "format": "H:i:s",
                        "nullable": true
                    },
                    "time_out": {
                        "type": "string",
                        "format": "H:i:s",
                        "nullable": true
                    },
                    "time_in2": {
                        "type": "string",
                        "format": "H:i:s",
                        "nullable": true
                    },
                    "time_out2": {
                        "type": "string",
                        "format": "H:i:s",
                        "nullable": true
                    },
                    "session_length_total": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "note_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "rendering_provider": {
                        "type": "integer",
                        "nullable": true
                    },
                    "supervisor_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "caregiver_goals": {
                        "type": "object",
                        "nullable": true
                    },
                    "rbt_training_goals": {
                        "type": "object",
                        "nullable": true
                    },
                    "provider_signature": {
                        "type": "string",
                        "nullable": true
                    },
                    "provider_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "supervisor_signature": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "ok",
                            "no",
                            "review"
                        ]
                    },
                    "summary_note": {
                        "type": "string",
                        "nullable": true
                    },
                    "billed": {
                        "type": "boolean",
                        "default": false
                    },
                    "paid": {
                        "type": "boolean",
                        "default": false
                    },
                    "cpt_code": {
                        "type": "string",
                        "nullable": true
                    },
                    "location_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "pa_service_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "NoteRbt": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "session_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-11-05"
                    },
                    "next_session_is_scheduled_for": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-12 14:43:31"
                    },
                    "interventions": {
                        "properties": {
                            "positive_reinforcement": {
                                "type": "boolean",
                                "example": true
                            },
                            "prompting": {
                                "type": "boolean",
                                "example": true
                            },
                            "redirection": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "type": "object"
                    },
                    "replacements": {
                        "properties": {
                            "verbal_requests": {
                                "type": "integer",
                                "example": 5
                            },
                            "waiting_quietly": {
                                "type": "integer",
                                "example": 4
                            }
                        },
                        "type": "object"
                    },
                    "maladaptives": {
                        "properties": {
                            "tantrums": {
                                "type": "integer",
                                "example": 3
                            },
                            "aggression": {
                                "type": "integer",
                                "example": 1
                            }
                        },
                        "type": "object"
                    },
                    "bip_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "insurance_identifier": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "pos": {
                        "type": "string",
                        "example": "12"
                    },
                    "environmental_changes": {
                        "type": "string",
                        "example": "None noted"
                    },
                    "provider_credential": {
                        "type": "string",
                        "example": "RBT"
                    },
                    "patient_id": {
                        "type": "string",
                        "example": "PAT001"
                    },
                    "doctor_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "meet_with_client_at": {
                        "type": "string",
                        "example": "Home"
                    },
                    "time_in": {
                        "type": "string",
                        "example": " 09:00:00"
                    },
                    "time_out": {
                        "type": "string",
                        "example": " 11:00:00"
                    },
                    "time_in2": {
                        "type": "string",
                        "nullable": true
                    },
                    "time_out2": {
                        "type": "string",
                        "nullable": true
                    },
                    "session_length_morning_total": {
                        "type": "string",
                        "example": "02:00"
                    },
                    "session_length_afternon_total": {
                        "type": "string",
                        "example": "00:00"
                    },
                    "session_length_total": {
                        "type": "string",
                        "example": "02:00"
                    },
                    "total_hours": {
                        "type": "string",
                        "example": "02:00"
                    },
                    "client_appeared": {
                        "type": "string",
                        "example": "Alert and engaged"
                    },
                    "as_evidenced_by": {
                        "type": "string",
                        "example": "Active participation in activities"
                    },
                    "rbt_modeled_and_demonstrated_to_caregiver": {
                        "type": "string",
                        "example": "Positive reinforcement techniques"
                    },
                    "client_response_to_treatment_this_session": {
                        "type": "string",
                        "example": "Client showed good progress with verbal requests"
                    },
                    "progress_noted_this_session_compared_to_previous_session": {
                        "type": "string",
                        "example": "Improvement in communication skills"
                    },
                    "provider_signature": {
                        "type": "string",
                        "example": "Alice RBT"
                    },
                    "provider_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "pa_service_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "supervisor_signature": {
                        "type": "string",
                        "example": "Sarah BCBA"
                    },
                    "supervisor_name": {
                        "type": "integer",
                        "example": 3
                    },
                    "supervisor": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "Sarah BCBA"
                            },
                            "surname": {
                                "type": "string",
                                "nullable": true
                            },
                            "npi": {
                                "type": "string",
                                "example": "1234567890"
                            },
                            "electronic_signature": {
                                "type": "string",
                                "example": "signatures/example.png"
                            }
                        },
                        "type": "object"
                    },
                    "provider_name_g": {
                        "type": "string",
                        "nullable": true
                    },
                    "billed": {
                        "type": "integer",
                        "example": 0
                    },
                    "paid": {
                        "type": "integer",
                        "example": 0
                    },
                    "status": {
                        "type": "string",
                        "example": "ok"
                    },
                    "summary_note": {
                        "type": "string",
                        "nullable": true
                    },
                    "cpt_code": {
                        "type": "string",
                        "example": "97153"
                    },
                    "insuranceId": {
                        "type": "string",
                        "nullable": true
                    },
                    "provider": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Alice RBT"
                            },
                            "surname": {
                                "type": "string",
                                "nullable": true
                            },
                            "npi": {
                                "type": "string",
                                "nullable": true
                            },
                            "electronic_signature": {
                                "type": "string",
                                "example": "signatures/example.png"
                            }
                        },
                        "type": "object"
                    },
                    "location_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_minutes": {
                        "type": "integer",
                        "example": 120
                    },
                    "total_units": {
                        "type": "integer",
                        "example": 8
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-10 14:43:31"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-10 14:43:31"
                    }
                },
                "type": "object"
            },
            "PaService": {
                "required": [
                    "patient_id",
                    "pa_services",
                    "cpt",
                    "n_units",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "pa_services": {
                        "type": "string",
                        "example": "Behavioral Analysis"
                    },
                    "cpt": {
                        "type": "string",
                        "example": "97151"
                    },
                    "n_units": {
                        "type": "integer",
                        "example": 8
                    },
                    "spent_units": {
                        "type": "integer",
                        "example": 0
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-03-01T12:00:00Z"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Patient": {
                "title": "Patient",
                "description": "Patient model",
                "properties": {
                    "id": {
                        "description": "Patient ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "location_id": {
                        "description": "Location ID",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "patient_id": {
                        "description": "External patient identifier",
                        "type": "string",
                        "nullable": true
                    },
                    "first_name": {
                        "description": "Patient's first name",
                        "type": "string",
                        "maxLength": 250
                    },
                    "last_name": {
                        "description": "Patient's last name",
                        "type": "string",
                        "maxLength": 250
                    },
                    "email": {
                        "description": "Patient's email",
                        "type": "string",
                        "format": "email",
                        "maxLength": 250,
                        "nullable": true
                    },
                    "phone": {
                        "description": "Patient's phone number",
                        "type": "string",
                        "maxLength": 25,
                        "nullable": true
                    },
                    "language": {
                        "description": "Patient's preferred language",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_guardian_name": {
                        "description": "Name of parent or guardian",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_gender": {
                        "description": "Parent or guardian's gender",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "nullable": true
                    },
                    "parent_birth_date": {
                        "description": "Parent or guardian's birth date",
                        "type": "string",
                        "format": "m-d-Y",
                        "nullable": true
                    },
                    "parent_address": {
                        "description": "Parent or guardian's address",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_city": {
                        "description": "Parent or guardian's city",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_state": {
                        "description": "Parent or guardian's state",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "parent_zip": {
                        "description": "Parent or guardian's zip code",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "relationship": {
                        "description": "Relationship to patient",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "home_phone": {
                        "description": "Home phone number",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "work_phone": {
                        "description": "Work phone number",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "school_name": {
                        "description": "School name",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "school_number": {
                        "description": "School contact number",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "gender": {
                        "description": "Patient's gender",
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "birth_date": {
                        "description": "Patient's birth date",
                        "type": "string",
                        "format": "m-d-Y",
                        "nullable": true
                    },
                    "age": {
                        "description": "Patient's age (calculated from birth_date)",
                        "type": "integer",
                        "readOnly": true
                    },
                    "address": {
                        "description": "Patient's address",
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "description": "State",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "zip": {
                        "description": "ZIP code",
                        "type": "string",
                        "maxLength": 150,
                        "nullable": true
                    },
                    "avatar": {
                        "description": "Avatar image path",
                        "type": "string",
                        "nullable": true
                    },
                    "special_note": {
                        "description": "Special notes",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "Patient status",
                        "type": "string",
                        "default": "inactive",
                        "enum": [
                            "incoming",
                            "active",
                            "inactive",
                            "onHold",
                            "onDischarge",
                            "waitintOnPa",
                            "waitintOnPaIa",
                            "waitintOnIa",
                            "waitintOnServices",
                            "waitintOnStaff",
                            "waitintOnSchool"
                        ]
                    },
                    "insurer_id": {
                        "description": "Insurance ID",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "insurer_secondary_id": {
                        "description": "Insurance secondary ID",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "insurance_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "insurance_secondary_identifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "telehealth": {
                        "description": "Telehealth status",
                        "type": "boolean",
                        "default": false
                    },
                    "pay": {
                        "description": "Payment status",
                        "type": "boolean",
                        "default": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PatientIntake": {
                "title": "Patient Intake Status",
                "properties": {
                    "welcome": {
                        "type": "string",
                        "default": "waiting",
                        "enum": [
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "consent": {
                        "type": "string",
                        "default": "waiting",
                        "enum": [
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "insurance_card": {
                        "type": "string",
                        "default": "waiting",
                        "enum": [
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "eligibility": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "waiting",
                            "reviewing",
                            "psycho eval",
                            "requested",
                            "need new",
                            "yes",
                            "no",
                            "2 insurance"
                        ]
                    },
                    "interview": {
                        "type": "string",
                        "default": "pending",
                        "enum": [
                            "pending",
                            "send",
                            "receive",
                            "no apply"
                        ]
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "admin",
                            "user"
                        ]
                    },
                    "location_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Main Office"
                                },
                                "address": {
                                    "type": "string",
                                    "example": "123 Main St"
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Reduction Goals",
            "description": "API Endpoints for managing reduction goals"
        },
        {
            "name": "BIPs",
            "description": "BIPs"
        },
        {
            "name": "Long Term Objectives",
            "description": "Long Term Objectives"
        },
        {
            "name": "Short Term Objectives",
            "description": "Short Term Objectives"
        },
        {
            "name": "Admin/Insurance",
            "description": "Admin/Insurance"
        },
        {
            "name": "Admin/Locations",
            "description": "Admin/Locations"
        },
        {
            "name": "Admin/Notes",
            "description": "Admin/Notes"
        },
        {
            "name": "PA Services",
            "description": "PA Services"
        },
        {
            "name": "Admin/PA Services",
            "description": "Admin/PA Services"
        },
        {
            "name": "Admin/Roles",
            "description": "Admin/Roles"
        },
        {
            "name": "Claims",
            "description": "Claims"
        },
        {
            "name": "AI",
            "description": "AI"
        },
        {
            "name": "Admin/Patients",
            "description": "Admin/Patients"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}